ê 
IC:\Users\ikise\EleksProject\Task2\EleksTask\Controllers\AuthController.cs
	namespace		 	
	EleksTask		
 
.		 
Controllers		 
{

 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 
AllowAnonymous 
] 
public 

class 
AuthController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IAuthService %
_authService& 2
;2 3
public 
AuthController 
( 
IAuthService *
authService+ 6
)6 7
{ 	
_authService 
= 
authService &
;& '
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (

LogInAsync) 3
(3 4
[4 5
FromBody5 =
]= >
LogInRequestDto? N
logInDtoO W
)W X
{ 	
var 
response 
= 
await  
_authService! -
.- .

LogInAsync. 8
(8 9
logInDto9 A
)A B
;B C
if 
( 
response 
. 
Error 
!= !
null" &
)& '
{ 
return 

BadRequest !
(! "
response" *
)* +
;+ ,
} 
return   
Ok   
(   
response   
)   
;    
}!! 	
[$$ 	
HttpPost$$	 
($$ 
$str$$  
)$$  !
]$$! "
public%% 
async%% 
Task%% 
<%% 
IActionResult%% '
>%%' (
Registration%%) 5
(%%5 6
[%%6 7
FromBody%%7 ?
]%%? @
RegistrationDto%%A P
registrationDto%%Q `
)%%` a
{&& 	
if'' 
('' 
!'' 

ModelState'' 
.'' 
IsValid'' #
)''# $
return(( 

BadRequest(( !
(((! "
)((" #
;((# $
var** 
response** 
=** 
await**  
_authService**! -
.**- .
Registration**. :
(**: ;
registrationDto**; J
)**J K
;**K L
if++ 
(++ 
response++ 
.++ 
Error++ 
!=++ !
null++" &
)++& '
{,, 
return-- 

BadRequest-- !
(--! "
response--" *
)--* +
;--+ ,
}.. 
return00 
Ok00 
(00 
response00 
)00 
;00  
}11 	
[33 	
HttpGet33	 
(33 
$str33 
)33  
]33  !
public44 
async44 
Task44 
<44 
ActionResult44 &
>44& '
ConfirmEmail44( 4
(444 5
[445 6
	FromQuery446 ?
]44? @
Guid44@ D
token44E J
,44J K
[44L M
	FromQuery44M V
]44V W
string44X ^
userId44_ e
)44e f
{55 	
var66 
response66 
=66 
await66  
_authService66! -
.66- .
ConfirmEmail66. :
(66: ;
token66; @
,66@ A
userId66B H
)66H I
;66I J
if77 
(77 
response77 
.77 
Error77 
!=77 !
null77" &
)77& '
{88 
return99 

BadRequest99 !
(99! "
response99" *
)99* +
;99+ ,
}:: 
return<< 
Ok<< 
(<< 
response<< 
)<< 
;<<  
}== 	
}>> 
}@@ ¼"
KC:\Users\ikise\EleksProject\Task2\EleksTask\Controllers\BasketController.cs
	namespace 	
	EleksTask
 
{ 
[ 
Route 

(
 
$str 
) 
] 
[		 
ApiController		 
]		 
public

 

class

 
BasketController

 !
:

" #
ControllerBase

$ 2
{ 
private 
readonly 
IBasketService '
_basketService( 6
;6 7
public 
BasketController 
(  
IBasketService  .
basketService/ <
)< =
{ 	
_basketService 
= 
basketService *
;* +
} 	
[ 	
HttpPost	 
] 
[ 	
	Authorize	 
( 
Roles 
= 
$str +
)+ ,
], -
public 
async 
Task 
< 
IActionResult '
>' (#
AddProductToBasketAsync) @
(@ A
[A B
	FromQueryB K
]K L
stringL R
userIdS Y
,Y Z
[[ \
	FromQuery\ e
]e f
intg j
	productIdk t
)t u
{ 	
var 
response 
= 
await  
_basketService! /
./ 0#
AddProductToBasketAsync0 G
(G H
userIdH N
,N O
	productIdP Y
)Y Z
;Z [
if 
( 
response 
. 
Error 
!= !
null" &
)& '
{ 
return 

BadRequest !
(! "
response" *
)* +
;+ ,
} 
return 
Ok 
( 
response 
) 
;  
} 	
[   	
HttpGet  	 
(   
$str   
)   
]   
[!! 	
	Authorize!!	 
(!! 
Roles!! 
=!! 
$str!! +
)!!+ ,
]!!, -
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
GetInfoProduct"") 7
(""7 8
[""8 9
	FromRoute""9 B
]""B C
string""D J
userId""K Q
)""Q R
{## 	
var$$ 
response$$ 
=$$ 
await$$  
_basketService$$! /
.$$/ 0
GetInfoProductAsync$$0 C
($$C D
userId$$D J
)$$J K
;$$K L
if%% 
(%% 
response%% 
.%% 
Error%% 
!=%% !
null%%" &
)%%& '
{&& 
return'' 

BadRequest'' !
(''! "
response''" *
)''* +
;''+ ,
}(( 
return** 
Ok** 
(** 
response** 
)** 
;**  
}++ 	
[-- 	

HttpDelete--	 
]-- 
[.. 	
	Authorize..	 
(.. 
Roles.. 
=.. 
$str.. +
)..+ ,
].., -
public// 
async// 
Task// 
<// 
IActionResult// '
>//' ((
DeleteProductFromBasketAsync//) E
(//E F
[//F G
	FromQuery//G P
]//P Q
string//R X
userId//Y _
,//_ `
[//` a
	FromQuery//a j
]//j k
int//k n
	productId//o x
)//x y
{00 	
var11 
response11 
=11 
await11  
_basketService11! /
.11/ 0(
DeleteProductFromBasketAsync110 L
(11L M
userId11M S
,11S T
	productId11T ]
)11] ^
;11^ _
if22 
(22 
response22 
.22 
Error22 
!=22 !
null22" &
)22& '
{33 
return44 

BadRequest44 !
(44! "
response44" *
)44* +
;44+ ,
}55 
return77 
Ok77 
(77 
response77 
)77 
;77  
}88 	
}99 
}:: ò0
MC:\Users\ikise\EleksProject\Task2\EleksTask\Controllers\CategoryController.cs
	namespace 	
	EleksTask
 
{ 
[ 
Route 

(
 
$str 
) 
] 
[		 
ApiController		 
]		 
public

 

class

 
CategoryController

 #
:

$ %
ControllerBase

& 4
{ 
private 
readonly 
ICategoryService )
_categoryService* :
;: ;
public 
CategoryController !
(! "
ICategoryService" 2
categoryService3 B
)B C
{ 	
_categoryService 
= 
categoryService .
;. /
} 	
[ 	
HttpPost	 
] 
[ 	
	Authorize	 
( 
Roles 
= 
$str "
)" #
]# $
public 
async 
Task 
< 
IActionResult '
>' (
CreateCategoryAsync) <
(< =
[= >
FromBody> F
]F G
stringG M
nameN R
)R S
{ 	
var 
response 
= 
await  
_categoryService! 1
.1 2
CreateCategoryAsync2 E
(E F
nameF J
)J K
;K L
if 
( 
response 
. 
Error 
!= !
null" &
)& '
{ 
return 

BadRequest !
(! "
response" *
)* +
;+ ,
} 
return 
Ok 
( 
response 
) 
;  
} 	
[   	

HttpDelete  	 
(   
$str   "
)  " #
]  # $
[!! 	
	Authorize!!	 
(!! 
Roles!! 
=!! 
$str!! "
)!!" #
]!!# $
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
DeleteCategoryAsync"") <
(""< =
[""= >
	FromRoute""> G
]""G H
int""I L

categoryId""M W
)""W X
{## 	
var$$ 
response$$ 
=$$ 
await$$  
_categoryService$$! 1
.$$1 2
DeleteCategoryAsync$$2 E
($$E F

categoryId$$F P
)$$P Q
;$$Q R
if%% 
(%% 
response%% 
.%% 
Error%% 
!=%% !
null%%" &
)%%& '
{&& 
return'' 

BadRequest'' !
(''! "
response''" *
)''* +
;''+ ,
}(( 
return** 
Ok** 
(** 
response** 
)** 
;**  
}++ 	
[-- 	
HttpGet--	 
(-- 
$str-- 
)--  
]--  !
[.. 	
AllowAnonymous..	 
].. 
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
GetByIdAsync//) 5
(//5 6
[//6 7
	FromRoute//7 @
]//@ A
int//B E

categoryId//F P
)//P Q
{00 	
var11 
response11 
=11 
await11  
_categoryService11! 1
.111 2 
GetCategoryByIdAsync112 F
(11F G

categoryId11G Q
)11Q R
;11R S
if22 
(22 
response22 
.22 
Error22 
!=22 !
null22" &
)22& '
{33 
return44 

BadRequest44 !
(44! "
response44" *
)44* +
;44+ ,
}55 
return77 
Ok77 
(77 
response77 
)77 
;77  
}88 	
[:: 	
HttpGet::	 
]:: 
[;; 	
AllowAnonymous;;	 
];; 
public<< 
async<< 
Task<< 
<<< 
IActionResult<< '
><<' (
GetAllCategories<<) 9
(<<9 :
)<<: ;
{== 	
var>> 
response>> 
=>> 
await>>  
_categoryService>>! 1
.>>1 2
GetAllCategories>>2 B
(>>B C
)>>C D
;>>D E
if?? 
(?? 
response?? 
.?? 
Error?? 
!=?? !
null??" &
)??& '
{@@ 
returnAA 

BadRequestAA !
(AA! "
responseAA" *
)AA* +
;AA+ ,
}BB 
returnDD 
OkDD 
(DD 
responseDD 
)DD 
;DD  
}EE 	
[GG 	
HttpPutGG	 
(GG 
$strGG 
)GG  
]GG  !
[HH 	
	AuthorizeHH	 
(HH 
RolesHH 
=HH 
$strHH "
)HH" #
]HH# $
publicII 
asyncII 
TaskII 
<II 
IActionResultII '
>II' (
RenameCategoryAsyncII) <
(II< =
[II= >
	FromRouteII> G
]IIG H
intIIH K

categoryIdIIL V
,IIV W
[IIX Y
FromBodyIIY a
]IIa b
stringIIb h
newNameIIi p
)IIp q
{JJ 	
varKK 
responseKK 
=KK 
awaitKK  
_categoryServiceKK! 1
.KK1 2
RenameCategoryAsyncKK2 E
(KKE F

categoryIdKKF P
,KKP Q
newNameKKR Y
)KKY Z
;KKZ [
ifLL 
(LL 
responseLL 
.LL 
ErrorLL 
!=LL !
nullLL" &
)LL& '
{MM 
returnNN 

BadRequestNN !
(NN! "
responseNN" *
)NN* +
;NN+ ,
}OO 
returnQQ 
OkQQ 
(QQ 
responseQQ 
)QQ 
;QQ  
}RR 	
}TT 
}UU ï0
LC:\Users\ikise\EleksProject\Task2\EleksTask\Controllers\ProductController.cs
	namespace 	
	EleksTask
 
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class 
ProductController "
:# $
ControllerBase% 3
{ 
private 
readonly 
IProductService (
_productService) 8
;8 9
public 
ProductController  
(  !
IProductService! 0
productService1 ?
)? @
{ 	
_productService 
= 
productService ,
;, -
} 	
[ 	
HttpPost	 
( 
$str  
)  !
]! "
[ 	
	Authorize	 
( 
Roles 
= 
$str "
)" #
]# $
public 
async 
Task 
< 
IActionResult '
>' (
CreateProductAsync) ;
(; <
[< =
	FromRoute= F
]F G
intH K

categoryIdL V
,V W
[X Y
FromBodyY a
]a b
CreateProductDtob r

productDtos }
)} ~
{ 	
var 
response 
= 
await  
_productService! 0
.0 1
CreateProductAsync1 C
(C D

categoryIdD N
,N O

productDtoP Z
)Z [
;[ \
if 
( 
response 
. 
Error 
!= !
null" &
)& '
{ 
return 

BadRequest !
(! "
response" *
)* +
;+ ,
} 
return 
Ok 
( 
response 
) 
;  
} 	
[   	
	Authorize  	 
(   
Roles   
=   
$str   "
)  " #
]  # $
[!! 	

HttpDelete!!	 
(!! 
$str!! !
)!!! "
]!!" #
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
DeleteProductAsync"") ;
(""; <
[""< =
	FromRoute""= F
]""F G
int""H K
	productId""L U
)""U V
{## 	
var$$ 
response$$ 
=$$ 
await$$  
_productService$$! 0
.$$0 1
DeleteProductAsync$$1 C
($$C D
	productId$$D M
)$$M N
;$$N O
if%% 
(%% 
response%% 
.%% 
Error%% 
!=%% !
null%%" &
)%%& '
{&& 
return'' 

BadRequest'' !
(''! "
response''" *
)''* +
;''+ ,
}(( 
return** 
Ok** 
(** 
response** 
)** 
;**  
}++ 	
[-- 	
AllowAnonymous--	 
]-- 
[.. 	
HttpGet..	 
].. 
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
GetAllProducts//) 7
(//7 8
)//8 9
{00 	
var11 
response11 
=11 
await11  
_productService11! 0
.110 1
GetAllProducts111 ?
(11? @
)11@ A
;11A B
if22 
(22 
response22 
.22 
Error22 
!=22 !
null22" &
)22& '
{33 
return44 

BadRequest44 !
(44! "
response44" *
)44* +
;44+ ,
}55 
return77 
Ok77 
(77 
response77 
)77 
;77  
}88 	
[:: 	
HttpGet::	 
(:: 
$str:: 
)::  
]::  !
[;; 	
AllowAnonymous;;	 
];; 
public<< 
async<< 
Task<< 
<<< 
IActionResult<< '
><<' ((
GetProductsByCategoryIdAsync<<) E
(<<E F
[<<F G
	FromRoute<<G P
]<<P Q!
GetProductsRequestDto<<Q f
getProducts<<g r
)<<r s
{== 	
var>> 
response>> 
=>> 
await>>  
_productService>>! 0
.>>0 1(
GetProductsByCategoryIdAsync>>1 M
(>>M N
getProducts>>N Y
)>>Y Z
;>>Z [
if?? 
(?? 
response?? 
.?? 
Error?? 
!=?? !
null??" &
)??& '
{@@ 
returnAA 

BadRequestAA !
(AA! "
responseAA" *
)AA* +
;AA+ ,
}BB 
returnDD 
OkDD 
(DD 
responseDD 
)DD 
;DD  
}EE 	
[GG 	
HttpGetGG	 
(GG 
$strGG 
)GG 
]GG  
[HH 	
AllowAnonymousHH	 
]HH 
publicII 
asyncII 
TaskII 
<II 
IActionResultII '
>II' (

GetProductII) 3
(II3 4
[II4 5
	FromRouteII5 >
]II> ?
intII? B
	productIdIIC L
)IIL M
{JJ 	
varKK 
responseKK 
=KK 
awaitKK  
_productServiceKK! 0
.KK0 1

GetProductKK1 ;
(KK; <
	productIdKK< E
)KKE F
;KKF G
ifLL 
(LL 
responseLL 
.LL 
ErrorLL 
!=LL !
nullLL" &
)LL& '
{MM 
returnNN 

BadRequestNN !
(NN! "
responseNN" *
)NN* +
;NN+ ,
}OO 
returnQQ 
OkQQ 
(QQ 
responseQQ 
)QQ 
;QQ  
}RR 	
}SS 
}TT 
?C:\Users\ikise\EleksProject\Task2\EleksTask\Database\Context.cs
	namespace 	
	EleksTask
 
{ 
public 

class 
ApplicationContext #
:$ %
IdentityDbContext& 7
<7 8
ApplicationUser8 G
>G H
{		 
public

 
ApplicationContext

 !
(

! "
DbContextOptions

" 2
<

2 3
ApplicationContext

3 E
>

E F
options

G N
)

N O
:

P Q
base

R V
(

V W
options

W ^
)

^ _
{ 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
base 
. 
OnModelCreating  
(  !
modelBuilder! -
)- .
;. /
modelBuilder 
. 
Entity 
<  
BasketProduct  -
>- .
(. /
)/ 0
. 
HasKey 
( 
t 
=> 
new  
{! "
t# $
.$ %
	ProductId% .
,. /
t0 1
.1 2
ApplicationUserId2 C
}D E
)E F
;F G
modelBuilder 
. 
Entity 
<  
ApplicationUser  /
>/ 0
(0 1
)1 2
.2 3
Property3 ;
(; <
u< =
=>> @
uA B
.B C
EmailC H
)H I
.I J

IsRequiredJ T
(T U
)U V
.V W
HasMaxLengthW c
(c d
$numd g
)g h
;h i
modelBuilder 
. 
Entity 
<  
ApplicationUser  /
>/ 0
(0 1
)1 2
.2 3
Property3 ;
(; <
u< =
=>> @
uA B
.B C
UserNameC K
)K L
.L M

IsRequiredM W
(W X
)X Y
.Y Z
HasMaxLengthZ f
(f g
$numg i
)i j
;j k
} 	
public 
DbSet 
< 
Category 
> 

Categories )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
DbSet 
< 
Product 
> 
Products &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 

EmailToken 
>  
EmailTokens! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public   
DbSet   
<   
BasketProduct   "
>  " #
BasketProducts  $ 2
{  3 4
get  5 8
;  8 9
set  : =
;  = >
}  ? @
}!! 
}$$ ±
DC:\Users\ikise\EleksProject\Task2\EleksTask\Database\SeedDatabase.cs
	namespace 	
	EleksTask
 
{ 
public 

class 
SeedDatabase 
{ 
public 
static 
void 

Initialize %
(% &
IServiceProvider& 6
serviceProvider7 F
)F G
{		 	
var

 
context

 
=

 
serviceProvider

 )
.

) *
GetRequiredService

* <
<

< =
ApplicationContext

= O
>

O P
(

P Q
)

Q R
;

R S
context 
. 
Database 
. 
EnsureCreated *
(* +
)+ ,
;, -
} 	
} 
} í
<C:\Users\ikise\EleksProject\Task2\EleksTask\Dto\BasketDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class 
	BasketDto 
{ 
public 
List 
< 

ProductDto 
> 
Product  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public		 
double		 

TotalPrice		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
}

 
} Þ
CC:\Users\ikise\EleksProject\Task2\EleksTask\Dto\CreateProductDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class 
CreateProductDto !
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
double		 
Price		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
}

 
} »
DC:\Users\ikise\EleksProject\Task2\EleksTask\Dto\GetAllCategoryDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class 
GetAllCategoryDto "
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
} 
}		 
AC:\Users\ikise\EleksProject\Task2\EleksTask\Dto\GetCategoryDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class 
GetCategoryDto 
:  !
GetAllCategoryDto" 3
{ 
public 
List 
< 

ProductDto 
> 
Products  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
}		 «
HC:\Users\ikise\EleksProject\Task2\EleksTask\Dto\GetProductsRequestDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class !
GetProductsRequestDto &
{ 
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Skip 
{ 
get 
; 
set "
;" #
}$ %
=& '
$num( )
;) *
public		 
int		 
Take		 
{		 
get		 
;		 
set		 "
;		" #
}		$ %
=		& '
$num		( *
;		* +
public 
string 
Search 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
} 
} Ç
BC:\Users\ikise\EleksProject\Task2\EleksTask\Dto\LogInRequestDto.cs
	namespace 	
	EleksTask
 
. 
Models 
{ 
public 

class 
LogInRequestDto  
{ 
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
}		 Å
CC:\Users\ikise\EleksProject\Task2\EleksTask\Dto\LogInResponseDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class 
LogInResponseDto !
{ 
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
public		 
DateTime		 
Exparion		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
}

 
} å
=C:\Users\ikise\EleksProject\Task2\EleksTask\Dto\ProductDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class 

ProductDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public 
double 
Price 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ©
BC:\Users\ikise\EleksProject\Task2\EleksTask\Dto\RegistrationDto.cs
	namespace 	
	EleksTask
 
. 
Dto 
{ 
public 

class 
RegistrationDto  
{ 
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
string		 
LastName		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 4
)4 5
]5 6
[ 	
DataType	 
( 
DataType 
. 
EmailAddress '
)' (
]( )
[ 	
RegularExpression	 
( 
$str E
,E F
ErrorMessageF R
=S T
$strU f
)f g
]g h
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 7
)7 8
]8 9
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
( 
ErrorMessage 
=  
$str! ?
)? @
]@ A
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Compare	 
( 
$str 
) 
] 
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
Role 
Role 
{ 
get 
; 
set  #
;# $
}% &
=' (
Role) -
.- .
Customer. 6
;6 7
[ 	
Required	 
] 
[ 	
	MaxLength	 
( 
$num 
) 
] 
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ©
<C:\Users\ikise\EleksProject\Task2\EleksTask\EmailServices.cs
	namespace 	

TourServer
 
{ 
public 

class 
EmailService 
: 
IEmailService  -
{		 
public

 
async

 
Task

 
SendEmailAsync

 (
(

( )
string

) /
email

0 5
,

5 6
string

7 =
subject

> E
,

E F
string

G M
message

N U
)

U V
{ 	
var 
emailMessage 
= 
new "
MimeMessage# .
(. /
)/ 0
;0 1
emailMessage 
. 
From 
. 
Add !
(! "
new" %
MailboxAddress& 4
(4 5
$str5 J
,J K
$strL h
)h i
)i j
;j k
emailMessage 
. 
To 
. 
Add 
(  
new  #
MailboxAddress$ 2
(2 3
$str3 5
,5 6
email7 <
)< =
)= >
;> ?
emailMessage 
. 
Subject  
=! "
subject# *
;* +
emailMessage 
. 
Body 
= 
new  #
TextPart$ ,
(, -
MimeKit- 4
.4 5
Text5 9
.9 :

TextFormat: D
.D E
HtmlE I
)I J
{ 
Text 
= 
message 
} 
; 
using 
( 
var 
client 
= 
new  #

SmtpClient$ .
(. /
)/ 0
)0 1
{ 
await 
client 
. 
ConnectAsync )
() *
$str* :
,: ;
$num< ?
,? @
trueA E
)E F
;F G
await 
client 
. 
AuthenticateAsync .
(. /
$str/ K
,K L
$strM W
)W X
;X Y
await 
client 
. 
	SendAsync &
(& '
emailMessage' 3
)3 4
;4 5
await 
client 
. 
DisconnectAsync ,
(, -
true- 1
)1 2
;2 3
} 
} 	
} 
}   õ
4C:\Users\ikise\EleksProject\Task2\EleksTask\Error.cs
	namespace 	
	EleksTask
 
{ 
public 

class 
Error 
{ 
public 
int 
	ErrorCode 
{ 
get "
;" #
}$ %
public 
string 
ErrorDescription &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public		 
Error		 
(		 
)		 
{

 	
} 	
public 
Error 
( 
string 
description '
)' (
{ 	
ErrorDescription 
= 
description *
;* +
	ErrorCode 
= 
$num 
; 
} 	
public 
Error 
( 
int 
	errorCode "
," #
string$ *
description+ 6
)6 7
{ 	
ErrorDescription 
= 
description *
;* +
	ErrorCode 
= 
	errorCode !
;! "
} 	
public 
override 
string 
ToString '
(' (
)( )
{ 	
return 
$" 
Status code:  "
{" #
	ErrorCode# ,
}, -
, \nDescription:- =
{= >
ErrorDescription> N
}N O
\nO Q
"Q R
;R S
} 	
} 
} Ú
<C:\Users\ikise\EleksProject\Task2\EleksTask\IEmailService.cs
	namespace 	
	EleksTask
 
{ 
public 

	interface 
IEmailService "
{ 
Task 
SendEmailAsync 
( 
string "
email# (
,( )
string* 0
subject1 8
,8 9
string: @
messageA H
)H I
;I J
} 
}		 ô	
EC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\IAuthService.cs
	namespace 	
	EleksTask
 
. 
	Interface 
{ 
public		 

	interface		 
IAuthService		 !
{

 
Task 
< 
Response 
< 
LogInResponseDto &
>& '
>' (

LogInAsync) 3
(3 4
[4 5
FromBody5 =
]= >
LogInRequestDto? N
logInDtoO W
)W X
;X Y
Task 
< 
Response 
< 
string 
> 
> 
Registration +
(+ ,
[, -
FromBody- 5
]5 6
RegistrationDto7 F
registrationDtoG V
)V W
;W X
Task 
< 
Response 
< 
bool 
> 
> 
ConfirmEmail )
() *
[* +
	FromQuery+ 4
]4 5
Guid6 :
token; @
,@ A
[B C
	FromQueryC L
]L M
stringN T
userIdU [
)[ \
;\ ]
} 
} Ë
JC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\IBasketRepository.cs
	namespace 	
	EleksTask
 
. 
	Interface 
{ 
public 

	interface 
IBasketRepository &
{ 
Task		 
<		 
int		 
>		 
Add		 
(		 
string		 
userId		 #
,		# $
int		% (
	productId		) 2
)		2 3
;		3 4
Task 
< 
bool 
> 
Delete 
( 
string  
userId! '
,' (
int) ,
	productId- 6
)6 7
;7 8
Task 
< 
List 
< 
Product 
> 
> 
GetInfoProductAsync /
(/ 0
string0 6
userId7 =
)= >
;> ?
} 
} Þ
GC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\IBasketService.cs
	namespace 	
	EleksTask
 
. 
	Interface 
{ 
public 

	interface 
IBasketService #
{ 
Task 
< 
Response 
< 
bool 
> 
> #
AddProductToBasketAsync 4
(4 5
string5 ;
userId< B
,B C
intD G
	productIdH Q
)Q R
;R S
Task		 
<		 
Response		 
<		 
	BasketDto		 
>		  
>		  !
GetInfoProductAsync		" 5
(		5 6
string		6 <
userId		= C
)		C D
;		D E
Task 
< 
Response 
< 
bool 
> 
> (
DeleteProductFromBasketAsync 9
(9 :
string: @
userIdA G
,G H
intI L
	productIdM V
)V W
;W X
} 
} Ë
LC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\ICategoryRepository.cs
public 
	interface 
ICategoryRepository $
{ 
Task 
< 	
Category	 
> 
GetById 
( 
int 

categoryId )
)) *
;* +
Task 
< 	
List	 
< 
Category 
> 
> 
GetAll 
(  
)  !
;! "
Task		 
<		 	
int			 
>		 
Add		 
(		 
Category		 
entity		 !
)		! "
;		" #
Task

 
<

 	
bool

	 
>

 
Delete

 
(

 
int

 
id

 
)

 
;

 
Task 
< 	
bool	 
> 
Rename 
( 
int 

categoryId $
,$ %
string& ,
newName- 4
)4 5
;5 6
} Ä
IC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\ICategoryService.cs
	namespace 	
	EleksTask
 
. 
	Interface 
{ 
public 

	interface 
ICategoryService %
{		 
Task

 
<

 
Response

 
<

 
int

 
>

 
>

 
CreateCategoryAsync

 /
(

/ 0
string

0 6
name

7 ;
)

; <
;

< =
Task 
< 
Response 
< 
bool 
> 
> 
DeleteCategoryAsync 0
(0 1
[1 2
	FromRoute2 ;
]; <
int= @

categoryIdA K
)K L
;L M
Task 
< 
Response 
< 
List 
< 
GetAllCategoryDto ,
>, -
>- .
>. /
GetAllCategories0 @
(@ A
)A B
;B C
Task 
< 
Response 
< 
bool 
> 
> 
RenameCategoryAsync 0
(0 1
int1 4

categoryId5 ?
,? @
stringA G
newNameH O
)O P
;P Q
Task 
< 
Response 
< 
GetCategoryDto $
>$ %
>% & 
GetCategoryByIdAsync' ;
(; <
int< ?

categoryId@ J
)J K
;K L
} 
} û
KC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\IProductRepository.cs
	namespace 	
	EleksTask
 
. 
	Interface 
{ 
public 

	interface 
IProductRepository '
{ 
Task 
< 
Product 
> 
GetById 
( 
int !

categoryId" ,
), -
;- .
Task		 
<		 
List		 
<		 
Product		 
>		 
>		 #
GetProductsByCategoryId		 3
(		3 4
int		4 7

categoryId		8 B
,		B C
int		C F
skip		G K
,		K L
int		L O
take		P T
,		T U
string		V \
search		] c
)		c d
;		d e
Task

 
<

 
List

 
<

 
Product

 
>

 
>

 
GetAll

 "
(

" #
)

# $
;

$ %
Task 
< 
int 
> 
Add 
( 
int 

categoryId $
,$ %
Product& -
entity. 4
)4 5
;5 6
Task 
< 
bool 
> 
Delete 
( 
int 
id  
)  !
;! "
Task 
< 
bool 
> 
Rename 
( 
int 

categoryId (
,( )
string* 0
newName1 8
)8 9
;9 :
} 
} Û
HC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\IProductService.cs
	namespace 	
	EleksTask
 
. 
	Interface 
{ 
public 

	interface 
IProductService $
{ 
Task		 
<		 
Response		 
<		 
int		 
>		 
>		 
CreateProductAsync		 .
(		. /
int		/ 2

categoryId		3 =
,		= >
CreateProductDto		? O

productDto		P Z
)		Z [
;		[ \
Task 
< 
Response 
< 
bool 
> 
> 
DeleteProductAsync /
(/ 0
int0 3
	productId4 =
)= >
;> ?
Task 
< 
Response 
< 
List 
< 

ProductDto %
>% &
>& '
>' (
GetAllProducts) 7
(7 8
)8 9
;9 :
Task 
< 
Response 
< 
List 
< 

ProductDto %
>% &
>& '
>' ((
GetProductsByCategoryIdAsync) E
(E F!
GetProductsRequestDtoF [
productsRequestDto\ n
)n o
;o p
Task 
< 
Response 
< 

ProductDto  
>  !
>! "

GetProduct# -
(- .
int. 1
	productId2 ;
); <
;< =
} 
} Ü
DC:\Users\ikise\EleksProject\Task2\EleksTask\Interface\IUnitOfWork.cs
	namespace 	
	EleksTask
 
{ 
public 

	interface 
IUnitOfWork  
:! "
IDisposable# .
{ 
ApplicationContext 
Context "
{# $
get% (
;( )
}* +
Task		 
Commit		 
(		 
)		 
;		 
}

 
} á
=C:\Users\ikise\EleksProject\Task2\EleksTask\MappingProfile.cs
public 
class 
MappingProfile 
: 
Profile %
{ 
public 

MappingProfile 
( 
) 
{ 
	CreateMap		 
<		 
CreateProductDto		 "
,		" #
Product		$ +
>		+ ,
(		, -
)		- .
.		. /

ReverseMap		/ 9
(		9 :
)		: ;
;		; <
	CreateMap 
< 
GetAllCategoryDto #
,# $
Category% -
>- .
(. /
)/ 0
.0 1

ReverseMap1 ;
(; <
)< =
;= >
	CreateMap 
< 

ProductDto 
, 
Product %
>% &
(& '
)' (
.( )

ReverseMap) 3
(3 4
)4 5
;5 6
} 
} Ä	
LC:\Users\ikise\EleksProject\Task2\EleksTask\Middleware\ExeptionMiddleware.cs
	namespace 	
	EleksTask
 
{ 
public 

class 
ExceptionMiddleware $
{ 
private		 
readonly		 
RequestDelegate		 (
_next		) .
;		. /
public 
ExceptionMiddleware "
(" #
RequestDelegate# 2
next3 7
)7 8
{ 	
_next 
= 
next 
?? 
throw !
new" %!
ArgumentNullException& ;
(; <
nameof< B
(B C
nextC G
)G H
)H I
;I J
} 	
public 
async 
Task 
Invoke  
(  !
HttpContext! ,
context- 4
)4 5
{ 	
try 
{ 
await 
_next 
( 
context #
)# $
;$ %
} 
catch 
( 
	Exception 
ex 
)  
{ 
} 
} 	
} 
} «
MC:\Users\ikise\EleksProject\Task2\EleksTask\Migrations\20181003075017_Init.cs
	namespace 	
	EleksTask
 
. 

Migrations 
{ 
public 

partial 
class 
Init 
: 
	Migration  )
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
	maxLength0 9
:9 :
$num; >
,> ?
nullable@ H
:H I
trueJ N
)N O
,O P
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
	maxLength: C
:C D
$numE H
,H I
nullableJ R
:R S
trueT X
)X Y
,Y Z
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
nullable< D
:D E
trueF J
)J K
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
UserName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
	maxLength4 =
:= >
$num? B
,B C
nullableD L
:L M
trueN R
)R S
,S T
NormalizedUserName &
=' (
table) .
.. /
Column/ 5
<5 6
string6 <
>< =
(= >
	maxLength> G
:G H
$numI L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
Email   
=   
table   !
.  ! "
Column  " (
<  ( )
string  ) /
>  / 0
(  0 1
	maxLength  1 :
:  : ;
$num  < ?
,  ? @
nullable  A I
:  I J
true  K O
)  O P
,  P Q
NormalizedEmail!! #
=!!$ %
table!!& +
.!!+ ,
Column!!, 2
<!!2 3
string!!3 9
>!!9 :
(!!: ;
	maxLength!!; D
:!!D E
$num!!F I
,!!I J
nullable!!K S
:!!S T
true!!U Y
)!!Y Z
,!!Z [
EmailConfirmed"" "
=""# $
table""% *
.""* +
Column""+ 1
<""1 2
bool""2 6
>""6 7
(""7 8
nullable""8 @
:""@ A
false""B G
)""G H
,""H I
PasswordHash##  
=##! "
table### (
.##( )
Column##) /
<##/ 0
string##0 6
>##6 7
(##7 8
nullable##8 @
:##@ A
true##B F
)##F G
,##G H
SecurityStamp$$ !
=$$" #
table$$$ )
.$$) *
Column$$* 0
<$$0 1
string$$1 7
>$$7 8
($$8 9
nullable$$9 A
:$$A B
true$$C G
)$$G H
,$$H I
ConcurrencyStamp%% $
=%%% &
table%%' ,
.%%, -
Column%%- 3
<%%3 4
string%%4 :
>%%: ;
(%%; <
nullable%%< D
:%%D E
true%%F J
)%%J K
,%%K L
PhoneNumber&& 
=&&  !
table&&" '
.&&' (
Column&&( .
<&&. /
string&&/ 5
>&&5 6
(&&6 7
nullable&&7 ?
:&&? @
true&&A E
)&&E F
,&&F G 
PhoneNumberConfirmed'' (
='') *
table''+ 0
.''0 1
Column''1 7
<''7 8
bool''8 <
>''< =
(''= >
nullable''> F
:''F G
false''H M
)''M N
,''N O
TwoFactorEnabled(( $
=((% &
table((' ,
.((, -
Column((- 3
<((3 4
bool((4 8
>((8 9
(((9 :
nullable((: B
:((B C
false((D I
)((I J
,((J K

LockoutEnd)) 
=))  
table))! &
.))& '
Column))' -
<))- .
DateTimeOffset)). <
>))< =
())= >
nullable))> F
:))F G
true))H L
)))L M
,))M N
LockoutEnabled** "
=**# $
table**% *
.*** +
Column**+ 1
<**1 2
bool**2 6
>**6 7
(**7 8
nullable**8 @
:**@ A
false**B G
)**G H
,**H I
AccessFailedCount++ %
=++& '
table++( -
.++- .
Column++. 4
<++4 5
int++5 8
>++8 9
(++9 :
nullable++: B
:++B C
false++D I
)++I J
,++J K
	FirstName,, 
=,, 
table,,  %
.,,% &
Column,,& ,
<,,, -
string,,- 3
>,,3 4
(,,4 5
nullable,,5 =
:,,= >
true,,? C
),,C D
,,,D E
LastName-- 
=-- 
table-- $
.--$ %
Column--% +
<--+ ,
string--, 2
>--2 3
(--3 4
nullable--4 <
:--< =
true--> B
)--B C
}.. 
,.. 
constraints// 
:// 
table// "
=>//# %
{00 
table11 
.11 

PrimaryKey11 $
(11$ %
$str11% 5
,115 6
x117 8
=>119 ;
x11< =
.11= >
Id11> @
)11@ A
;11A B
}22 
)22 
;22 
migrationBuilder44 
.44 
CreateTable44 (
(44( )
name55 
:55 
$str55 "
,55" #
columns66 
:66 
table66 
=>66 !
new66" %
{77 
Id88 
=88 
table88 
.88 
Column88 %
<88% &
int88& )
>88) *
(88* +
nullable88+ 3
:883 4
false885 :
)88: ;
.99 

Annotation99 #
(99# $
$str99$ G
,99G H,
 SqlServerValueGenerationStrategy99I i
.99i j
IdentityColumn99j x
)99x y
,99y z
Name:: 
=:: 
table::  
.::  !
Column::! '
<::' (
string::( .
>::. /
(::/ 0
nullable::0 8
:::8 9
true::: >
)::> ?
};; 
,;; 
constraints<< 
:<< 
table<< "
=><<# %
{== 
table>> 
.>> 

PrimaryKey>> $
(>>$ %
$str>>% 4
,>>4 5
x>>6 7
=>>>8 :
x>>; <
.>>< =
Id>>= ?
)>>? @
;>>@ A
}?? 
)?? 
;?? 
migrationBuilderAA 
.AA 
CreateTableAA (
(AA( )
nameBB 
:BB 
$strBB #
,BB# $
columnsCC 
:CC 
tableCC 
=>CC !
newCC" %
{DD 
IdEE 
=EE 
tableEE 
.EE 
ColumnEE %
<EE% &
intEE& )
>EE) *
(EE* +
nullableEE+ 3
:EE3 4
falseEE5 :
)EE: ;
.FF 

AnnotationFF #
(FF# $
$strFF$ G
,FFG H,
 SqlServerValueGenerationStrategyFFI i
.FFi j
IdentityColumnFFj x
)FFx y
,FFy z
TokenGG 
=GG 
tableGG !
.GG! "
ColumnGG" (
<GG( )
GuidGG) -
>GG- .
(GG. /
nullableGG/ 7
:GG7 8
falseGG9 >
)GG> ?
,GG? @
UserIdHH 
=HH 
tableHH "
.HH" #
ColumnHH# )
<HH) *
stringHH* 0
>HH0 1
(HH1 2
nullableHH2 :
:HH: ;
trueHH< @
)HH@ A
}II 
,II 
constraintsJJ 
:JJ 
tableJJ "
=>JJ# %
{KK 
tableLL 
.LL 

PrimaryKeyLL $
(LL$ %
$strLL% 5
,LL5 6
xLL7 8
=>LL9 ;
xLL< =
.LL= >
IdLL> @
)LL@ A
;LLA B
}MM 
)MM 
;MM 
migrationBuilderOO 
.OO 
CreateTableOO (
(OO( )
namePP 
:PP 
$strPP (
,PP( )
columnsQQ 
:QQ 
tableQQ 
=>QQ !
newQQ" %
{RR 
IdSS 
=SS 
tableSS 
.SS 
ColumnSS %
<SS% &
intSS& )
>SS) *
(SS* +
nullableSS+ 3
:SS3 4
falseSS5 :
)SS: ;
.TT 

AnnotationTT #
(TT# $
$strTT$ G
,TTG H,
 SqlServerValueGenerationStrategyTTI i
.TTi j
IdentityColumnTTj x
)TTx y
,TTy z
RoleIdUU 
=UU 
tableUU "
.UU" #
ColumnUU# )
<UU) *
stringUU* 0
>UU0 1
(UU1 2
nullableUU2 :
:UU: ;
falseUU< A
)UUA B
,UUB C
	ClaimTypeVV 
=VV 
tableVV  %
.VV% &
ColumnVV& ,
<VV, -
stringVV- 3
>VV3 4
(VV4 5
nullableVV5 =
:VV= >
trueVV? C
)VVC D
,VVD E

ClaimValueWW 
=WW  
tableWW! &
.WW& '
ColumnWW' -
<WW- .
stringWW. 4
>WW4 5
(WW5 6
nullableWW6 >
:WW> ?
trueWW@ D
)WWD E
}XX 
,XX 
constraintsYY 
:YY 
tableYY "
=>YY# %
{ZZ 
table[[ 
.[[ 

PrimaryKey[[ $
([[$ %
$str[[% :
,[[: ;
x[[< =
=>[[> @
x[[A B
.[[B C
Id[[C E
)[[E F
;[[F G
table\\ 
.\\ 

ForeignKey\\ $
(\\$ %
name]] 
:]] 
$str]] F
,]]F G
column^^ 
:^^ 
x^^  !
=>^^" $
x^^% &
.^^& '
RoleId^^' -
,^^- .
principalTable__ &
:__& '
$str__( 5
,__5 6
principalColumn`` '
:``' (
$str``) -
,``- .
onDeleteaa  
:aa  !
ReferentialActionaa" 3
.aa3 4
Cascadeaa4 ;
)aa; <
;aa< =
}bb 
)bb 
;bb 
migrationBuilderdd 
.dd 
CreateTabledd (
(dd( )
nameee 
:ee 
$stree (
,ee( )
columnsff 
:ff 
tableff 
=>ff !
newff" %
{gg 
Idhh 
=hh 
tablehh 
.hh 
Columnhh %
<hh% &
inthh& )
>hh) *
(hh* +
nullablehh+ 3
:hh3 4
falsehh5 :
)hh: ;
.ii 

Annotationii #
(ii# $
$strii$ G
,iiG H,
 SqlServerValueGenerationStrategyiiI i
.iii j
IdentityColumniij x
)iix y
,iiy z
UserIdjj 
=jj 
tablejj "
.jj" #
Columnjj# )
<jj) *
stringjj* 0
>jj0 1
(jj1 2
nullablejj2 :
:jj: ;
falsejj< A
)jjA B
,jjB C
	ClaimTypekk 
=kk 
tablekk  %
.kk% &
Columnkk& ,
<kk, -
stringkk- 3
>kk3 4
(kk4 5
nullablekk5 =
:kk= >
truekk? C
)kkC D
,kkD E

ClaimValuell 
=ll  
tablell! &
.ll& '
Columnll' -
<ll- .
stringll. 4
>ll4 5
(ll5 6
nullablell6 >
:ll> ?
truell@ D
)llD E
}mm 
,mm 
constraintsnn 
:nn 
tablenn "
=>nn# %
{oo 
tablepp 
.pp 

PrimaryKeypp $
(pp$ %
$strpp% :
,pp: ;
xpp< =
=>pp> @
xppA B
.ppB C
IdppC E
)ppE F
;ppF G
tableqq 
.qq 

ForeignKeyqq $
(qq$ %
namerr 
:rr 
$strrr F
,rrF G
columnss 
:ss 
xss  !
=>ss" $
xss% &
.ss& '
UserIdss' -
,ss- .
principalTablett &
:tt& '
$strtt( 5
,tt5 6
principalColumnuu '
:uu' (
$struu) -
,uu- .
onDeletevv  
:vv  !
ReferentialActionvv" 3
.vv3 4
Cascadevv4 ;
)vv; <
;vv< =
}ww 
)ww 
;ww 
migrationBuilderyy 
.yy 
CreateTableyy (
(yy( )
namezz 
:zz 
$strzz (
,zz( )
columns{{ 
:{{ 
table{{ 
=>{{ !
new{{" %
{|| 
LoginProvider}} !
=}}" #
table}}$ )
.}}) *
Column}}* 0
<}}0 1
string}}1 7
>}}7 8
(}}8 9
nullable}}9 A
:}}A B
false}}C H
)}}H I
,}}I J
ProviderKey~~ 
=~~  !
table~~" '
.~~' (
Column~~( .
<~~. /
string~~/ 5
>~~5 6
(~~6 7
nullable~~7 ?
:~~? @
false~~A F
)~~F G
,~~G H
ProviderDisplayName '
=( )
table* /
./ 0
Column0 6
<6 7
string7 =
>= >
(> ?
nullable? G
:G H
trueI M
)M N
,N O
UserId
 
=
 
table
 "
.
" #
Column
# )
<
) *
string
* 0
>
0 1
(
1 2
nullable
2 :
:
: ;
false
< A
)
A B
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% :
,
: ;
x
< =
=>
> @
new
A D
{
E F
x
G H
.
H I
LoginProvider
I V
,
V W
x
X Y
.
Y Z
ProviderKey
Z e
}
f g
)
g h
;
h i
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 F
,
F G
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 '
,
' (
columns
 
:
 
table
 
=>
 !
new
" %
{
 
UserId
 
=
 
table
 "
.
" #
Column
# )
<
) *
string
* 0
>
0 1
(
1 2
nullable
2 :
:
: ;
false
< A
)
A B
,
B C
RoleId
 
=
 
table
 "
.
" #
Column
# )
<
) *
string
* 0
>
0 1
(
1 2
nullable
2 :
:
: ;
false
< A
)
A B
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 9
,
9 :
x
; <
=>
= ?
new
@ C
{
D E
x
F G
.
G H
UserId
H N
,
N O
x
P Q
.
Q R
RoleId
R X
}
Y Z
)
Z [
;
[ \
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 E
,
E F
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
RoleId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 E
,
E F
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
   &
:
  & '
$str
  ( 5
,
  5 6
principalColumn
¡¡ '
:
¡¡' (
$str
¡¡) -
,
¡¡- .
onDelete
¢¢  
:
¢¢  !
ReferentialAction
¢¢" 3
.
¢¢3 4
Cascade
¢¢4 ;
)
¢¢; <
;
¢¢< =
}
££ 
)
££ 
;
££ 
migrationBuilder
¥¥ 
.
¥¥ 
CreateTable
¥¥ (
(
¥¥( )
name
¦¦ 
:
¦¦ 
$str
¦¦ (
,
¦¦( )
columns
§§ 
:
§§ 
table
§§ 
=>
§§ !
new
§§" %
{
¨¨ 
UserId
©© 
=
©© 
table
©© "
.
©©" #
Column
©©# )
<
©©) *
string
©©* 0
>
©©0 1
(
©©1 2
nullable
©©2 :
:
©©: ;
false
©©< A
)
©©A B
,
©©B C
LoginProvider
ªª !
=
ªª" #
table
ªª$ )
.
ªª) *
Column
ªª* 0
<
ªª0 1
string
ªª1 7
>
ªª7 8
(
ªª8 9
nullable
ªª9 A
:
ªªA B
false
ªªC H
)
ªªH I
,
ªªI J
Name
«« 
=
«« 
table
««  
.
««  !
Column
««! '
<
««' (
string
««( .
>
««. /
(
««/ 0
nullable
««0 8
:
««8 9
false
««: ?
)
««? @
,
««@ A
Value
¬¬ 
=
¬¬ 
table
¬¬ !
.
¬¬! "
Column
¬¬" (
<
¬¬( )
string
¬¬) /
>
¬¬/ 0
(
¬¬0 1
nullable
¬¬1 9
:
¬¬9 :
true
¬¬; ?
)
¬¬? @
}
­­ 
,
­­ 
constraints
®® 
:
®® 
table
®® "
=>
®®# %
{
¯¯ 
table
°° 
.
°° 

PrimaryKey
°° $
(
°°$ %
$str
°°% :
,
°°: ;
x
°°< =
=>
°°> @
new
°°A D
{
°°E F
x
°°G H
.
°°H I
UserId
°°I O
,
°°O P
x
°°Q R
.
°°R S
LoginProvider
°°S `
,
°°` a
x
°°b c
.
°°c d
Name
°°d h
}
°°i j
)
°°j k
;
°°k l
table
±± 
.
±± 

ForeignKey
±± $
(
±±$ %
name
²² 
:
²² 
$str
²² F
,
²²F G
column
³³ 
:
³³ 
x
³³  !
=>
³³" $
x
³³% &
.
³³& '
UserId
³³' -
,
³³- .
principalTable
´´ &
:
´´& '
$str
´´( 5
,
´´5 6
principalColumn
µµ '
:
µµ' (
$str
µµ) -
,
µµ- .
onDelete
¶¶  
:
¶¶  !
ReferentialAction
¶¶" 3
.
¶¶3 4
Cascade
¶¶4 ;
)
¶¶; <
;
¶¶< =
}
·· 
)
·· 
;
·· 
migrationBuilder
¹¹ 
.
¹¹ 
CreateTable
¹¹ (
(
¹¹( )
name
ºº 
:
ºº 
$str
ºº  
,
ºº  !
columns
»» 
:
»» 
table
»» 
=>
»» !
new
»»" %
{
¼¼ 
Id
½½ 
=
½½ 
table
½½ 
.
½½ 
Column
½½ %
<
½½% &
int
½½& )
>
½½) *
(
½½* +
nullable
½½+ 3
:
½½3 4
false
½½5 :
)
½½: ;
.
¾¾ 

Annotation
¾¾ #
(
¾¾# $
$str
¾¾$ G
,
¾¾G H.
 SqlServerValueGenerationStrategy
¾¾I i
.
¾¾i j
IdentityColumn
¾¾j x
)
¾¾x y
,
¾¾y z
Name
¿¿ 
=
¿¿ 
table
¿¿  
.
¿¿  !
Column
¿¿! '
<
¿¿' (
string
¿¿( .
>
¿¿. /
(
¿¿/ 0
nullable
¿¿0 8
:
¿¿8 9
true
¿¿: >
)
¿¿> ?
,
¿¿? @
Description
ÀÀ 
=
ÀÀ  !
table
ÀÀ" '
.
ÀÀ' (
Column
ÀÀ( .
<
ÀÀ. /
string
ÀÀ/ 5
>
ÀÀ5 6
(
ÀÀ6 7
nullable
ÀÀ7 ?
:
ÀÀ? @
true
ÀÀA E
)
ÀÀE F
,
ÀÀF G
Price
ÁÁ 
=
ÁÁ 
table
ÁÁ !
.
ÁÁ! "
Column
ÁÁ" (
<
ÁÁ( )
double
ÁÁ) /
>
ÁÁ/ 0
(
ÁÁ0 1
nullable
ÁÁ1 9
:
ÁÁ9 :
false
ÁÁ; @
)
ÁÁ@ A
,
ÁÁA B

CategoryId
ÂÂ 
=
ÂÂ  
table
ÂÂ! &
.
ÂÂ& '
Column
ÂÂ' -
<
ÂÂ- .
int
ÂÂ. 1
>
ÂÂ1 2
(
ÂÂ2 3
nullable
ÂÂ3 ;
:
ÂÂ; <
false
ÂÂ= B
)
ÂÂB C
}
ÃÃ 
,
ÃÃ 
constraints
ÄÄ 
:
ÄÄ 
table
ÄÄ "
=>
ÄÄ# %
{
ÅÅ 
table
ÆÆ 
.
ÆÆ 

PrimaryKey
ÆÆ $
(
ÆÆ$ %
$str
ÆÆ% 2
,
ÆÆ2 3
x
ÆÆ4 5
=>
ÆÆ6 8
x
ÆÆ9 :
.
ÆÆ: ;
Id
ÆÆ; =
)
ÆÆ= >
;
ÆÆ> ?
table
ÇÇ 
.
ÇÇ 

ForeignKey
ÇÇ $
(
ÇÇ$ %
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ A
,
ÈÈA B
column
ÉÉ 
:
ÉÉ 
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '

CategoryId
ÉÉ' 1
,
ÉÉ1 2
principalTable
ÊÊ &
:
ÊÊ& '
$str
ÊÊ( 4
,
ÊÊ4 5
principalColumn
ËË '
:
ËË' (
$str
ËË) -
,
ËË- .
onDelete
ÌÌ  
:
ÌÌ  !
ReferentialAction
ÌÌ" 3
.
ÌÌ3 4
Cascade
ÌÌ4 ;
)
ÌÌ; <
;
ÌÌ< =
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
migrationBuilder
ÏÏ 
.
ÏÏ 
CreateTable
ÏÏ (
(
ÏÏ( )
name
ÐÐ 
:
ÐÐ 
$str
ÐÐ &
,
ÐÐ& '
columns
ÑÑ 
:
ÑÑ 
table
ÑÑ 
=>
ÑÑ !
new
ÑÑ" %
{
ÒÒ 
ApolicationuserId
ÓÓ %
=
ÓÓ& '
table
ÓÓ( -
.
ÓÓ- .
Column
ÓÓ. 4
<
ÓÓ4 5
string
ÓÓ5 ;
>
ÓÓ; <
(
ÓÓ< =
nullable
ÓÓ= E
:
ÓÓE F
false
ÓÓG L
)
ÓÓL M
,
ÓÓM N
ApplicationUserId
ÔÔ %
=
ÔÔ& '
table
ÔÔ( -
.
ÔÔ- .
Column
ÔÔ. 4
<
ÔÔ4 5
string
ÔÔ5 ;
>
ÔÔ; <
(
ÔÔ< =
nullable
ÔÔ= E
:
ÔÔE F
true
ÔÔG K
)
ÔÔK L
,
ÔÔL M
	ProductId
ÕÕ 
=
ÕÕ 
table
ÕÕ  %
.
ÕÕ% &
Column
ÕÕ& ,
<
ÕÕ, -
int
ÕÕ- 0
>
ÕÕ0 1
(
ÕÕ1 2
nullable
ÕÕ2 :
:
ÕÕ: ;
false
ÕÕ< A
)
ÕÕA B
}
ÖÖ 
,
ÖÖ 
constraints
×× 
:
×× 
table
×× "
=>
××# %
{
ØØ 
table
ÙÙ 
.
ÙÙ 

PrimaryKey
ÙÙ $
(
ÙÙ$ %
$str
ÙÙ% 8
,
ÙÙ8 9
x
ÙÙ: ;
=>
ÙÙ< >
new
ÙÙ? B
{
ÙÙC D
x
ÙÙE F
.
ÙÙF G
	ProductId
ÙÙG P
,
ÙÙP Q
x
ÙÙR S
.
ÙÙS T
ApolicationuserId
ÙÙT e
}
ÙÙf g
)
ÙÙg h
;
ÙÙh i
table
ÚÚ 
.
ÚÚ 

ForeignKey
ÚÚ $
(
ÚÚ$ %
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ O
,
ÛÛO P
column
ÜÜ 
:
ÜÜ 
x
ÜÜ  !
=>
ÜÜ" $
x
ÜÜ% &
.
ÜÜ& '
ApplicationUserId
ÜÜ' 8
,
ÜÜ8 9
principalTable
ÝÝ &
:
ÝÝ& '
$str
ÝÝ( 5
,
ÝÝ5 6
principalColumn
ÞÞ '
:
ÞÞ' (
$str
ÞÞ) -
,
ÞÞ- .
onDelete
ßß  
:
ßß  !
ReferentialAction
ßß" 3
.
ßß3 4
Restrict
ßß4 <
)
ßß< =
;
ßß= >
table
àà 
.
àà 

ForeignKey
àà $
(
àà$ %
name
áá 
:
áá 
$str
áá D
,
ááD E
column
ââ 
:
ââ 
x
ââ  !
=>
ââ" $
x
ââ% &
.
ââ& '
	ProductId
ââ' 0
,
ââ0 1
principalTable
ãã &
:
ãã& '
$str
ãã( 2
,
ãã2 3
principalColumn
ää '
:
ää' (
$str
ää) -
,
ää- .
onDelete
åå  
:
åå  !
ReferentialAction
åå" 3
.
åå3 4
Cascade
åå4 ;
)
åå; <
;
åå< =
}
ææ 
)
ææ 
;
ææ 
migrationBuilder
èè 
.
èè 
CreateIndex
èè (
(
èè( )
name
éé 
:
éé 
$str
éé 2
,
éé2 3
table
êê 
:
êê 
$str
êê )
,
êê) *
column
ëë 
:
ëë 
$str
ëë  
)
ëë  !
;
ëë! "
migrationBuilder
íí 
.
íí 
CreateIndex
íí (
(
íí( )
name
îî 
:
îî 
$str
îî %
,
îî% &
table
ïï 
:
ïï 
$str
ïï $
,
ïï$ %
column
ðð 
:
ðð 
$str
ðð (
,
ðð( )
unique
ññ 
:
ññ 
true
ññ 
,
ññ 
filter
òò 
:
òò 
$str
òò 6
)
òò6 7
;
òò7 8
migrationBuilder
ôô 
.
ôô 
CreateIndex
ôô (
(
ôô( )
name
õõ 
:
õõ 
$str
õõ 2
,
õõ2 3
table
öö 
:
öö 
$str
öö )
,
öö) *
column
÷÷ 
:
÷÷ 
$str
÷÷  
)
÷÷  !
;
÷÷! "
migrationBuilder
ùù 
.
ùù 
CreateIndex
ùù (
(
ùù( )
name
úú 
:
úú 
$str
úú 2
,
úú2 3
table
ûû 
:
ûû 
$str
ûû )
,
ûû) *
column
üü 
:
üü 
$str
üü  
)
üü  !
;
üü! "
migrationBuilder
þþ 
.
þþ 
CreateIndex
þþ (
(
þþ( )
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ 1
,
ÿÿ1 2
table
 
:
 
$str
 (
,
( )
column
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 "
,
" #
table
 
:
 
$str
 $
,
$ %
column
 
:
 
$str
 )
)
) *
;
* +
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 %
,
% &
table
 
:
 
$str
 $
,
$ %
column
 
:
 
$str
 ,
,
, -
unique
 
:
 
true
 
,
 
filter
 
:
 
$str
 :
)
: ;
;
; <
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 ;
,
; <
table
 
:
 
$str
 '
,
' (
column
 
:
 
$str
 +
)
+ ,
;
, -
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 .
,
. /
table
 
:
 
$str
 !
,
! "
column
 
:
 
$str
 $
)
$ %
;
% &
}
 	
	protected
 
override
 
void
 
Down
  $
(
$ %
MigrationBuilder
% 5
migrationBuilder
6 F
)
F G
{
 	
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 (
)
( )
;
) *
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
   
:
   
$str
   (
)
  ( )
;
  ) *
migrationBuilder
¢¢ 
.
¢¢ 
	DropTable
¢¢ &
(
¢¢& '
name
££ 
:
££ 
$str
££ (
)
££( )
;
££) *
migrationBuilder
¥¥ 
.
¥¥ 
	DropTable
¥¥ &
(
¥¥& '
name
¦¦ 
:
¦¦ 
$str
¦¦ '
)
¦¦' (
;
¦¦( )
migrationBuilder
¨¨ 
.
¨¨ 
	DropTable
¨¨ &
(
¨¨& '
name
©© 
:
©© 
$str
©© (
)
©©( )
;
©©) *
migrationBuilder
«« 
.
«« 
	DropTable
«« &
(
««& '
name
¬¬ 
:
¬¬ 
$str
¬¬ &
)
¬¬& '
;
¬¬' (
migrationBuilder
®® 
.
®® 
	DropTable
®® &
(
®®& '
name
¯¯ 
:
¯¯ 
$str
¯¯ #
)
¯¯# $
;
¯¯$ %
migrationBuilder
±± 
.
±± 
	DropTable
±± &
(
±±& '
name
²² 
:
²² 
$str
²² #
)
²²# $
;
²²$ %
migrationBuilder
´´ 
.
´´ 
	DropTable
´´ &
(
´´& '
name
µµ 
:
µµ 
$str
µµ #
)
µµ# $
;
µµ$ %
migrationBuilder
·· 
.
·· 
	DropTable
·· &
(
··& '
name
¸¸ 
:
¸¸ 
$str
¸¸  
)
¸¸  !
;
¸¸! "
migrationBuilder
ºº 
.
ºº 
	DropTable
ºº &
(
ºº& '
name
»» 
:
»» 
$str
»» "
)
»»" #
;
»»# $
}
¼¼ 	
}
½½ 
}¾¾ ä
PC:\Users\ikise\EleksProject\Task2\EleksTask\Migrations\20181008114605_Changes.cs
	namespace 	
	EleksTask
 
. 

Migrations 
{ 
public 

partial 
class 
Changes  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ô.
PC:\Users\ikise\EleksProject\Task2\EleksTask\Migrations\20181008133258_AddedId.cs
	namespace 	
	EleksTask
 
. 

Migrations 
{ 
public 

partial 
class 
AddedId  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 G
,

G H
table 
: 
$str '
)' (
;( )
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str )
,) *
table 
: 
$str '
)' (
;( )
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str )
,) *
table 
: 
$str '
)' (
;( )
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str )
,) *
table 
: 
$str '
,' (
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str 
, 
table 
: 
$str '
,' (
nullable 
: 
false 
,  
defaultValue   
:   
$num   
)    
;    !
migrationBuilder"" 
."" 
AddPrimaryKey"" *
(""* +
name## 
:## 
$str## )
,##) *
table$$ 
:$$ 
$str$$ '
,$$' (
columns%% 
:%% 
new%% 
[%% 
]%% 
{%%  
$str%%! ,
,%%, -
$str%%. A
}%%B C
)%%C D
;%%D E
migrationBuilder'' 
.'' 
AddForeignKey'' *
(''* +
name(( 
:(( 
$str(( G
,((G H
table)) 
:)) 
$str)) '
,))' (
column** 
:** 
$str** +
,**+ ,
principalTable++ 
:++ 
$str++  -
,++- .
principalColumn,, 
:,,  
$str,,! %
,,,% &
onDelete-- 
:-- 
ReferentialAction-- +
.--+ ,
Cascade--, 3
)--3 4
;--4 5
}.. 	
	protected00 
override00 
void00 
Down00  $
(00$ %
MigrationBuilder00% 5
migrationBuilder006 F
)00F G
{11 	
migrationBuilder22 
.22 
DropForeignKey22 +
(22+ ,
name33 
:33 
$str33 G
,33G H
table44 
:44 
$str44 '
)44' (
;44( )
migrationBuilder66 
.66 
DropPrimaryKey66 +
(66+ ,
name77 
:77 
$str77 )
,77) *
table88 
:88 
$str88 '
)88' (
;88( )
migrationBuilder:: 
.:: 

DropColumn:: '
(::' (
name;; 
:;; 
$str;; 
,;; 
table<< 
:<< 
$str<< '
)<<' (
;<<( )
migrationBuilder>> 
.>> 
AlterColumn>> (
<>>( )
string>>) /
>>>/ 0
(>>0 1
name?? 
:?? 
$str?? )
,??) *
table@@ 
:@@ 
$str@@ '
,@@' (
nullableAA 
:AA 
trueAA 
,AA 

oldClrTypeBB 
:BB 
typeofBB "
(BB" #
stringBB# )
)BB) *
)BB* +
;BB+ ,
migrationBuilderDD 
.DD 
	AddColumnDD &
<DD& '
stringDD' -
>DD- .
(DD. /
nameEE 
:EE 
$strEE )
,EE) *
tableFF 
:FF 
$strFF '
,FF' (
nullableGG 
:GG 
falseGG 
,GG  
defaultValueHH 
:HH 
$strHH  
)HH  !
;HH! "
migrationBuilderJJ 
.JJ 
AddPrimaryKeyJJ *
(JJ* +
nameKK 
:KK 
$strKK )
,KK) *
tableLL 
:LL 
$strLL '
,LL' (
columnsMM 
:MM 
newMM 
[MM 
]MM 
{MM  
$strMM! ,
,MM, -
$strMM. A
}MMB C
)MMC D
;MMD E
migrationBuilderOO 
.OO 
AddForeignKeyOO *
(OO* +
namePP 
:PP 
$strPP G
,PPG H
tableQQ 
:QQ 
$strQQ '
,QQ' (
columnRR 
:RR 
$strRR +
,RR+ ,
principalTableSS 
:SS 
$strSS  -
,SS- .
principalColumnTT 
:TT  
$strTT! %
,TT% &
onDeleteUU 
:UU 
ReferentialActionUU +
.UU+ ,
RestrictUU, 4
)UU4 5
;UU5 6
}VV 	
}WW 
}XX ó
DC:\Users\ikise\EleksProject\Task2\EleksTask\Models\ApllicatonUser.cs
	namespace 	
	EleksTask
 
. 
Models 
{ 
public 

class 
ApplicationUser  
:! "
IdentityUser# /
{ 
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
string		 
LastName		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
}

 
} ¨
CC:\Users\ikise\EleksProject\Task2\EleksTask\Models\BasketProduct.cs
	namespace 	
	EleksTask
 
. 
Models 
{ 
public 

class 
BasketProduct 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
ApplicationUserId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
ApplicationUser 
ApplicationUser .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public

 
int

 
	ProductId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
Product 
Product 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} 
>C:\Users\ikise\EleksProject\Task2\EleksTask\Models\Category.cs
	namespace 	
	EleksTask
 
. 
Models 
{ 
public 

class 
Category 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public 
List 
< 
Product 
> 
Products %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
new6 9
List: >
<> ?
Product? F
>F G
(G H
)H I
;I J
} 
} ü
@C:\Users\ikise\EleksProject\Task2\EleksTask\Models\EmailToken.cs
	namespace 	

TourServer
 
. 
Models 
{ 
public 

class 

EmailToken 
{ 
[ 	
Key	 
] 
public		 
int		 
Id		 
{		 
get		 
;		 
set		  
;		  !
}		" #
public 
Guid 
Token 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} 	
=C:\Users\ikise\EleksProject\Task2\EleksTask\Models\Product.cs
	namespace 	
	EleksTask
 
. 
Models 
{ 
public 

class 
Product 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public 
double 
Price 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Category 
Category  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Ù
6C:\Users\ikise\EleksProject\Task2\EleksTask\Program.cs
	namespace 	
	EleksTask
 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	 
CreateWebHostBuilder

  
(

  !
args

! %
)

% &
.

& '
Build

' ,
(

, -
)

- .
.

. /
Run

/ 2
(

2 3
)

3 4
;

4 5
} 	
public 
static 
IWebHostBuilder % 
CreateWebHostBuilder& :
(: ;
string; A
[A B
]B C
argsD H
)H I
=>J L
WebHost 
.  
CreateDefaultBuilder (
(( )
args) -
)- .
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
;& '
} 
} Ü(
JC:\Users\ikise\EleksProject\Task2\EleksTask\Repository\BasketRepository.cs
	namespace		 	
	EleksTask		
 
.		 

Repository		 
{

 
public 

class 
BasketRepository !
:" #
IBasketRepository$ 5
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public 
BasketRepository 
(  
IUnitOfWork  +

unitOfWork, 6
)6 7
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
int 
> 
Add "
(" #
string# )
userId* 0
,0 1
int2 5
	productId6 ?
)? @
{ 	
var 
user 
= 
await 
_unitOfWork (
.( )
Context) 0
.0 1
Users1 6
.6 7
FirstOrDefaultAsync7 J
(J K
uK L
=>M O
uP Q
.Q R
IdR T
==U W
userIdX ^
)^ _
;_ `
if 
( 
user 
== 
null 
) 
{ 
return 
- 
$num 
; 
} 
var 
product 
= 
await 
_unitOfWork  +
.+ ,
Context, 3
.3 4
Products4 <
.< =
FirstOrDefaultAsync= P
(P Q
pQ R
=>S U
pV W
.W X
IdX Z
==[ ]
	productId^ g
)g h
;h i
if 
( 
product 
== 
null 
)  
{ 
return 
- 
$num 
; 
}   
var"" 
basketProduct"" 
="" 
new""  #
BasketProduct""$ 1
(""1 2
)""2 3
{## 
ApplicationUser$$ 
=$$  !
user$$" &
,$$& '
Product%% 
=%% 
product%% !
}&& 
;&& 
await'' 
_unitOfWork'' 
.'' 
Context'' %
.''% &
BasketProducts''& 4
.''4 5
AddAsync''5 =
(''= >
basketProduct''> K
)''K L
;''L M
await(( 
_unitOfWork(( 
.(( 
Commit(( $
((($ %
)((% &
;((& '
return)) 
basketProduct))  
.))  !
Id))! #
;))# $
}** 	
public,, 
async,, 
Task,, 
<,, 
bool,, 
>,, 
Delete,,  &
(,,& '
string,,' -
userId,,. 4
,,,4 5
int,,6 9
	productId,,: C
),,C D
{-- 	
var.. 
basket.. 
=.. 
await// 
_unitOfWork// !
.//! "
Context//" )
.//) *
BasketProducts//* 8
.//8 9
FirstOrDefaultAsync//9 L
(//L M
b//M N
=>//O Q
b00 
.00 
ApplicationUserId00 '
==00( *
userId00+ 1
&&002 4
b005 6
.006 7
	ProductId007 @
==00A C
	productId00D M
)00M N
;00N O
if22 
(22 
basket22 
!=22 
null22 
)22 
{33 
_unitOfWork44 
.44 
Context44 #
.44# $
BasketProducts44$ 2
.442 3
Remove443 9
(449 :
basket44: @
)44@ A
;44A B
await55 
_unitOfWork55 !
.55! "
Commit55" (
(55( )
)55) *
;55* +
return66 
true66 
;66 
}77 
return99 
false99 
;99 
}:: 	
public<< 
async<< 
Task<< 
<<< 
List<< 
<<< 
Product<< &
><<& '
><<' (
GetInfoProductAsync<<) <
(<<< =
string<<= C
userId<<D J
)<<J K
{== 	
return>> 
await>> 
_unitOfWork>> $
.>>$ %
Context>>% ,
.?? 
BasketProducts?? 
.@@ 
Where@@ 
(@@ 
bp@@ 
=>@@ 
bp@@ 
.@@  
ApplicationUserId@@  1
==@@2 4
userId@@5 ;
)@@; <
.AA 
IncludeAA 
(AA 
pAA 
=>AA 
pAA 
.AA  
ProductAA  '
)AA' (
.BB 
SelectBB 
(BB 
pBB 
=>BB 
pBB 
.BB 
ProductBB &
)BB& '
.CC 
ToListAsyncCC 
(CC 
)CC 
;CC 
}DD 	
}EE 
}FF Ü%
LC:\Users\ikise\EleksProject\Task2\EleksTask\Repository\CategoryRepository.cs
public 
class 
CategoryRepository 
:  !
ICategoryRepository" 5
{ 
private		 
readonly		 
IUnitOfWork		  
_unitOfWork		! ,
;		, -
public 

CategoryRepository 
( 
IUnitOfWork )

unitOfWork* 4
)4 5
{ 
_unitOfWork 
= 

unitOfWork  
;  !
} 
public 

async 
Task 
< 
int 
> 
Add 
( 
Category '
entity( .
). /
{ 
if 

( 
await 
_unitOfWork 
. 
Context %
.% &

Categories& 0
.0 1
AnyAsync1 9
(9 :
c: ;
=>; =
c= >
.> ?
Name? C
==C E
entityE K
.K L
NameL P
)P Q
)Q R
{ 	
return 
- 
$num 
; 
} 	
await 
_unitOfWork 
. 
Context !
.! "

Categories" ,
., -
AddAsync- 5
(5 6
entity6 <
)< =
;= >
await 
_unitOfWork 
. 
Commit  
(  !
)! "
;" #
return 
entity 
. 
Id 
; 
} 
public 

async 
Task 
< 
bool 
> 
Delete "
(" #
int# &
id' )
)) *
{ 
var 
existing 
= 
await 
_unitOfWork (
.( )
Context) 0
.0 1

Categories1 ;
.; <
	FindAsync< E
(E F
idF H
)H I
;I J
if 

( 
existing 
!= 
null 
) 
{ 	
_unitOfWork   
.   
Context   
.    

Categories    *
.  * +
Remove  + 1
(  1 2
existing  2 :
)  : ;
;  ; <
await!! 
_unitOfWork!! 
.!! 
Commit!! %
(!!% &
)!!& '
;!!' (
return"" 
true"" 
;"" 
}## 	
return%% 
false%% 
;%% 
}&& 
public(( 

async(( 
Task(( 
<(( 
Category(( 
>(( 
GetById((  '
(((' (
int((( +

categoryId((, 6
)((6 7
{)) 
return** 
await** 
_unitOfWork**  
.**  !
Context**! (
.**( )

Categories**) 3
.**3 4
FirstOrDefaultAsync**4 G
(**G H
c**H I
=>**I K
c**K L
.**L M
Id**M O
==**O Q

categoryId**R \
)**\ ]
;**] ^
}++ 
public-- 

async-- 
Task-- 
<-- 
List-- 
<-- 
Category-- #
>--# $
>--$ %
GetAll--& ,
(--, -
)--- .
{.. 
return// 
await// 
_unitOfWork//  
.//  !
Context//! (
.//( )

Categories//) 3
.//3 4
ToListAsync//4 ?
(//? @
)//@ A
;//A B
}00 
public22 

async22 
Task22 
<22 
bool22 
>22 
Rename22 "
(22" #
int22# &

categoryId22' 1
,221 2
string223 9
newName22: A
)22A B
{33 
var44 
existing44 
=44 
await44 
_unitOfWork44 (
.44( )
Context44) 0
.440 1

Categories441 ;
.44; <
	FindAsync44< E
(44E F

categoryId44F P
)44P Q
;44Q R
if55 

(55 
existing55 
!=55 
null55 
)55 
{66 	
existing77 
.77 
Name77 
=77 
newName77 #
;77# $
await88 
_unitOfWork88 
.88 
Commit88 $
(88$ %
)88% &
;88& '
return99 
true99 
;99 
}:: 	
return;; 
false;; 
;;; 
}<< 
}== é2
KC:\Users\ikise\EleksProject\Task2\EleksTask\Repository\ProductRepository.cs
public		 
class		 
ProductRepository		 
:		  
IProductRepository		! 3
{

 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
public 

ProductRepository 
( 
IUnitOfWork (

unitOfWork) 3
)3 4
{ 
_unitOfWork 
= 

unitOfWork  
;  !
} 
public 

async 
Task 
< 
int 
> 
Add 
( 
int "

categoryId# -
,- .
Product. 5
entity6 <
)< =
{ 
var 
category 
= 
await 
_unitOfWork (
.( )
Context) 0
.0 1

Categories1 ;
.; <
FirstOrDefaultAsync< O
(O P
cP Q
=>R T
cU V
.V W
IdW Y
==Z \

categoryId] g
)g h
;h i
if 

( 
category 
== 
null 
) 
{ 	
return 
- 
$num 
; 
} 	
entity 
. 
Category 
= 
category "
;" #
await 
_unitOfWork 
. 
Context !
.! "
Products" *
.* +
AddAsync+ 3
(3 4
entity4 :
): ;
;; <
await 
_unitOfWork 
. 
Commit  
(  !
)! "
;" #
return 
entity 
. 
Id 
; 
} 
public   

async   
Task   
<   
bool   
>   
Delete   "
(  " #
int  # &
id  ' )
)  ) *
{!! 
var"" 
existing"" 
="" 
await"" 
_unitOfWork"" (
.""( )
Context"") 0
.""0 1
Products""1 9
.""9 :
	FindAsync"": C
(""C D
id""D F
)""F G
;""G H
if## 

(## 
existing## 
!=## 
null## 
)## 
{$$ 	
_unitOfWork%% 
.%% 
Context%% 
.%%  
Products%%  (
.%%( )
Remove%%) /
(%%/ 0
existing%%0 8
)%%8 9
;%%9 :
await&& 
_unitOfWork&& 
.&& 
Commit&& $
(&&$ %
)&&% &
;&&& '
return'' 
true'' 
;'' 
}(( 	
return** 
false** 
;** 
}++ 
public-- 

async-- 
Task-- 
<-- 
Product-- 
>-- 
GetById-- &
(--& '
int--' *
	productId--+ 4
)--4 5
{.. 
return// 
await// 
_unitOfWork//  
.//  !
Context//! (
.//( )
Products//) 1
.//1 2
AsNoTracking//2 >
(//> ?
)//? @
.//@ A
FirstOrDefaultAsync//A T
(//T U
c//U V
=>//W Y
c//Z [
.//[ \
Id//\ ^
==//_ a
	productId//b k
)//k l
;//l m
}00 
public22 

async22 
Task22 
<22 
List22 
<22 
Product22 "
>22" #
>22# $#
GetProductsByCategoryId22% <
(22< =
int22= @

categoryId22A K
,22K L
int22M P
skip22Q U
,22U V
int22W Z
take22[ _
,22_ `
string22` f
search22g m
)22m n
{33 
return44 
await44 
_unitOfWork44  
.44  !
Context44! (
.44( )
Products44) 1
.441 2
AsNoTracking442 >
(44> ?
)44? @
.55 
Where55 
(55 
p55 
=>55 
p55 
.55 

CategoryId55 $
==55% '

categoryId55( 2
&&553 5
p556 7
.557 8
Name558 <
.55< =
Contains55= E
(55E F
search55F L
)55L M
)55M N
.66 
Skip66 
(66 
skip66 
)66 
.77 
Take77 
(77 
take77 
)77 
.88 
Select88 
(88 
pr88 
=>88 
pr88 
)88 
.99 
ToListAsync99 
(99 
)99 
;99 
}:: 
public<< 

async<< 
Task<< 
<<< 
List<< 
<<< 
Product<< "
><<" #
><<# $
GetAll<<% +
(<<+ ,
)<<, -
{== 
return>> 
await>> 
_unitOfWork>>  
.>>  !
Context>>! (
.>>( )
Products>>) 1
.>>1 2
ToListAsync>>2 =
(>>= >
)>>> ?
;>>? @
}?? 
publicAA 

asyncAA 
TaskAA 
<AA 
boolAA 
>AA 
RenameAA "
(AA" #
intAA# &

categoryIdAA' 1
,AA1 2
stringAA3 9
newNameAA: A
)AAA B
{BB 
varCC 
existingCC 
=CC 
awaitCC 
_unitOfWorkCC (
.CC( )
ContextCC) 0
.CC0 1
ProductsCC1 9
.CC9 :
	FindAsyncCC: C
(CCC D

categoryIdCCD N
)CCN O
;CCO P
ifDD 

(DD 
existingDD 
!=DD 
nullDD 
)DD 
{EE 	
existingFF 
.FF 
NameFF 
=FF 
newNameFF #
;FF# $
awaitGG 
_unitOfWorkGG 
.GG 
CommitGG $
(GG$ %
)GG% &
;GG& '
returnHH 
trueHH 
;HH 
}II 	
returnJJ 
falseJJ 
;JJ 
}KK 
}LL ²
7C:\Users\ikise\EleksProject\Task2\EleksTask\Response.cs
	namespace 	
	EleksTask
 
{ 
public 

class 
Response 
< 
T 
> 
{ 
public 
T 
Data 
{ 
get 
; 
set  
;  !
}" #
public 
Error 
Error 
{ 
get  
;  !
set" %
;% &
}' (
} 
}		 
3C:\Users\ikise\EleksProject\Task2\EleksTask\Role.cs
	namespace 	
	EleksTask
 
{ 
public 

enum 
Role 
{ 
Admin 
, 
Customer 
} 
} ¹d
CC:\Users\ikise\EleksProject\Task2\EleksTask\Services\AuthService.cs
	namespace 	
	EleksTask
 
. 
Services 
{ 
public 

class 
AuthService 
: 
IAuthService +
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
private 
readonly 
RoleManager $
<$ %
IdentityRole% 1
>1 2
_roleManager3 ?
;? @
private 
readonly 
ApplicationContext +
_context, 4
;4 5
private 
readonly 
IEmailService &
_emailService' 4
;4 5
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public 
AuthService 
( 
UserManager &
<& '
ApplicationUser' 6
>6 7
userManager8 C
,C D
IEmailServiceE R
emailServiceS _
,_ `
IConfigurationa o
configurationp }
,} ~
RoleManager 
< 
IdentityRole $
>$ %
roleManager& 1
,1 2
ApplicationContext3 E
contextF M
)M N
{ 	
_userManager 
= 
userManager &
;& '
_roleManager 
= 
roleManager &
;& '
_context 
= 
context 
; 
_emailService   
=   
emailService   (
;  ( )
_configuration!! 
=!! 
configuration!! *
;!!* +
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
Response$$ "
<$$" #
LogInResponseDto$$# 3
>$$3 4
>$$4 5

LogInAsync$$6 @
($$@ A
LogInRequestDto$$A P
logInDto$$Q Y
)$$Y Z
{%% 	
var&& 
response&& 
=&& 
new&& 
Response&& '
<&&' (
LogInResponseDto&&( 8
>&&8 9
(&&9 :
)&&: ;
;&&; <
var'' 
user'' 
='' 
await'' 
_userManager'' )
.'') *
Users''* /
.''/ 0
FirstOrDefaultAsync''0 C
(''C D
u''D E
=>''F H
u''I J
.''J K
UserName''K S
==''T V
logInDto''W _
.''_ `
UserName''` h
)''i j
;''j k
if(( 
((( 
user(( 
!=(( 
null(( 
&&(( 
await((  %
_userManager((& 2
.((2 3
CheckPasswordAsync((3 E
(((E F
user((F J
,((J K
logInDto((L T
.((T U
Password((U ]
)((] ^
)((^ _
{)) 
var** 
roles** 
=** 
await** !
_userManager**" .
.**. /
GetRolesAsync**/ <
(**< =
user**= A
)**A B
;**B C
var++ 
claim++ 
=++ 
new++ 
Claim++  %
[++% &
]++& '
{,, 
new-- 
Claim-- 
(-- #
JwtRegisteredClaimNames-- 5
.--5 6
Sub--6 9
,--9 :
user--; ?
.--? @
Id--@ B
)--B C
,--C D
new.. 
Claim.. 
(.. #
JwtRegisteredClaimNames.. 5
...5 6
Jti..6 9
,..9 :
Guid..: >
...> ?
NewGuid..? F
(..F G
)..G H
...H I
ToString..I Q
(..Q R
)..R S
)..S T
,..T U
new// 
Claim// 
(// 
$str// %
,//% &
roles//& +
[//+ ,
$num//, -
]//- .
)//. /
,/// 0
}00 
;00 
var22 
token22 
=22 
new22 
JwtSecurityToken22  0
(220 1
expires33 
:33 
DateTime33 %
.33% &
Now33& )
.33) *
AddHours33* 2
(332 3
$num333 4
)334 5
,335 6
claims44 
:44 
claim44 !
,44! "
signingCredentials55 &
:55& '
new55( +
SigningCredentials55, >
(55> ?
new66  
SymmetricSecurityKey66 0
(660 1
Encoding661 9
.669 :
UTF866: >
.66> ?
GetBytes66? G
(66G H
_configuration66H V
.66V W

GetSection66W a
(66a b
$str66b m
)66m n
.66n o
Value66o t
)66t u
)66u v
,66v w
SecurityAlgorithms77 *
.77* +

HmacSha25677+ 5
)775 6
)88 
;88 
var99 
handler99 
=99 
new99 !#
JwtSecurityTokenHandler99" 9
(999 :
)99: ;
;99; <
var:: 
data:: 
=:: 
new:: 
LogInResponseDto:: /
(::/ 0
)::0 1
{;; 
Token<< 
=<< 
handler<< #
.<<# $

WriteToken<<$ .
(<<. /
token<</ 4
)<<4 5
,<<5 6
Exparion== 
=== 
token== $
.==$ %
ValidTo==% ,
}>> 
;>> 
response?? 
.?? 
Data?? 
=?? 
data??  $
;??$ %
returnAA 
responseAA 
;AA  
}BB 
responseDD 
.DD 
ErrorDD 
=DD 
newDD  
ErrorDD! &
(DD& '
$strDD' 7
)DD7 8
;DD8 9
returnEE 
responseEE 
;EE 
}FF 	
publicHH 
asyncHH 
TaskHH 
<HH 
ResponseHH "
<HH" #
stringHH# )
>HH) *
>HH* +
RegistrationHH, 8
(HH8 9
RegistrationDtoHH9 H
registrationDtoHHI X
)HHX Y
{II 	
varJJ 
responseJJ 
=JJ 
newJJ 
ResponseJJ '
<JJ' (
stringJJ( .
>JJ. /
(JJ/ 0
)JJ0 1
;JJ1 2
varKK 
userKK 
=KK 
newKK 
ApplicationUserKK *
(KK* +
)KK+ ,
{LL 
EmailMM 
=MM 
registrationDtoMM '
.MM' (
EmailMM( -
,MM- .
	FirstNameNN 
=NN 
registrationDtoNN +
.NN+ ,
	FirstNameNN, 5
,NN5 6
LastNameOO 
=OO 
registrationDtoOO *
.OO* +
LastNameOO+ 3
,OO3 4
UserNamePP 
=PP 
registrationDtoPP *
.PP* +
UserNamePP+ 3
}QQ 
;QQ 
ifSS 
(SS 
!SS 
awaitSS 
_roleManagerSS #
.SS# $
RoleExistsAsyncSS$ 3
(SS3 4
registrationDtoSS4 C
.SSC D
RoleSSD H
.SSH I
ToStringSSI Q
(SSQ R
)SSR S
)SSS T
)SST U
{TT 
awaitUU 
_roleManagerUU "
.UU" #
CreateAsyncUU# .
(UU. /
newUU/ 2
IdentityRoleUU3 ?
(UU? @
registrationDtoUU@ O
.UUO P
RoleUUP T
.UUT U
ToStringUUU ]
(UU] ^
)UU^ _
)UU_ `
)UU` a
;UUa b
}VV 
varXX 
resultXX 
=XX 
awaitXX 
_userManagerXX +
.XX+ ,
CreateAsyncXX, 7
(XX7 8
userXX8 <
,XX< =
registrationDtoXX> M
.XXM N
PasswordXXN V
)XXV W
;XXW X
ifYY 
(YY 
resultYY 
.YY 
ErrorsYY 
!=YY  
nullYY! %
&&YY& (
resultYY) /
.YY/ 0
ErrorsYY0 6
.YY6 7
AnyYY7 :
(YY: ;
)YY; <
)YY< =
{ZZ 
response[[ 
.[[ 
Error[[ 
=[[  
new[[! $
Error[[% *
([[* +
result[[+ 1
.[[1 2
Errors[[2 8
.[[8 9
Select[[9 ?
([[? @
e[[@ A
=>[[B D
e[[E F
.[[F G
Description[[G R
)[[R S
.[[S T
	Aggregate[[T ]
([[] ^
([[^ _
a[[_ `
,[[` a
b[[b c
)[[c d
=>[[e g
a[[h i
+[[j k
b[[l m
)[[m n
)[[n o
;[[o p
return\\ 
response\\ 
;\\  
}]] 
await^^ 
_userManager^^ 
.^^ 
AddToRoleAsync^^ -
(^^- .
user^^. 2
,^^2 3
registrationDto^^4 C
.^^C D
Role^^D H
.^^H I
ToString^^I Q
(^^Q R
)^^R S
)^^S T
;^^T U
var`` 
token`` 
=`` 
new`` 

EmailToken`` &
(``& '
)``' (
{aa 
UserIdbb 
=bb 
userbb 
.bb 
Idbb  
,bb  !
Tokencc 
=cc 
Guidcc 
.cc 
NewGuidcc $
(cc$ %
)cc% &
}dd 
;dd 
awaitff 
_contextff 
.ff 
EmailTokensff &
.ff& '
AddAsyncff' /
(ff/ 0
tokenff0 5
)ff5 6
;ff6 7
awaitgg 
_contextgg 
.gg 
SaveChangesAsyncgg +
(gg+ ,
)gg, -
;gg- .
varhh 
apiPathhh 
=hh 
$strhh O
+hhP Q
tokenhhR W
.hhW X
TokenhhX ]
+hh^ _
$strhh` j
+hhk l
userhhm q
.hhq r
Idhhr t
;hht u
varii 
linkii 
=ii 
$strii "
+ii# $
apiPathii% ,
+ii- .
$strii/ ;
;ii; <
responsekk 
.kk 
Datakk 
=kk 
userkk  
.kk  !
Idkk! #
;kk# $
returnll 
responsell 
;ll 
}mm 	
publicoo 
asyncoo 
Taskoo 
<oo 
Responseoo "
<oo" #
booloo# '
>oo' (
>oo( )
ConfirmEmailoo* 6
(oo6 7
Guidoo7 ;
tokenoo< A
,ooA B
stringooC I
userIdooJ P
)ooP Q
{pp 	
varqq 
responseqq 
=qq 
newqq 
Responseqq '
<qq' (
boolqq( ,
>qq, -
(qq- .
)qq. /
;qq/ 0
varrr 
tokrr 
=rr 
awaitrr 
_contextrr $
.rr$ %
EmailTokensrr% 0
.rr0 1
AsNoTrackingrr1 =
(rr= >
)rr> ?
.rr? @
FirstOrDefaultAsyncrr@ S
(rrS T
trrT U
=>rrV X
trrY Z
.rrZ [
UserIdrr[ a
==rrb d
userIdrre k
&&rrl n
trro p
.rrp q
Tokenrrq v
==rrw y
tokenrrz 
)	rr 
;
rr 
ifss 
(ss 
tokss 
==ss 
nullss 
)ss 
{tt 
responseuu 
.uu 
Erroruu 
=uu  
newuu! $
Erroruu% *
(uu* +
$struu+ ;
)uu; <
;uu< =
returnvv 
responsevv 
;vv  
}ww 
varxx 
userxx 
=xx 
awaitxx 
_contextxx %
.xx% &
Usersxx& +
.xx+ ,
FirstOrDefaultAsyncxx, ?
(xx? @
uxx@ A
=>xxB D
uxxE F
.xxF G
IdxxG I
==xxJ L
userIdxxM S
)xxS T
;xxT U
useryy 
.yy 
EmailConfirmedyy 
=yy  !
trueyy" &
;yy& '
awaitzz 
_contextzz 
.zz 
SaveChangesAsynczz +
(zz+ ,
)zz, -
;zz- .
response{{ 
.{{ 
Data{{ 
={{ 
true{{  
;{{  !
return|| 
response|| 
;|| 
}}} 	
}~~ 
} (
EC:\Users\ikise\EleksProject\Task2\EleksTask\Services\BasketService.cs
	namespace

 	
	EleksTask


 
.

 
Services

 
{ 
public 

class 
BasketService 
:  
IBasketService! /
{ 
private 
readonly 
ApplicationContext +
_context, 4
;4 5
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 
IBasketRepository *
_repository+ 6
;6 7
public 
BasketService 
( 
ApplicationContext /
context0 7
,7 8
IMapper9 @
mapperA G
,G H
IBasketRepositoryI Z

repository[ e
)e f
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
Response "
<" #
bool# '
>' (
>( )#
AddProductToBasketAsync* A
(A B
stringB H
userIdI O
,O P
intQ T
	productIdU ^
)^ _
{ 	
var 
response 
= 
new 
Response '
<' (
bool( ,
>, -
(- .
). /
;/ 0
var 
result 
= 
await 
_repository *
.* +
Add+ .
(. /
userId/ 5
,5 6
	productId7 @
)@ A
;A B
if 
( 
result 
== 
- 
$num 
) 
{ 
response 
. 
Error 
=  
new! $
Error% *
(* +
$str+ F
)F G
;G H
return   
response   
;    
}!! 
response"" 
."" 
Data"" 
="" 
true""  
;""  !
return## 
response## 
;## 
}$$ 	
public&& 
async&& 
Task&& 
<&& 
Response&& "
<&&" #
	BasketDto&&# ,
>&&, -
>&&- .
GetInfoProductAsync&&/ B
(&&B C
string&&C I
userId&&J P
)&&P Q
{'' 	
var(( 
response(( 
=(( 
new(( 
Response(( '
<((' (
	BasketDto((( 1
>((1 2
(((2 3
)((3 4
;((4 5
var)) 
productList)) 
=)) 
await)) #
_repository))$ /
.))/ 0
GetInfoProductAsync))0 C
())C D
userId))D J
)))J K
;))K L
response** 
.** 
Data** 
=** 
new** 
	BasketDto**  )
(**) *
)*** +
{++ 

TotalPrice,, 
=,, 
productList,, (
.,,( )
Sum,,) ,
(,,, -
p,,- .
=>,,/ 1
p,,2 3
.,,3 4
Price,,4 9
),,9 :
,,,: ;
Product-- 
=-- 
_mapper-- !
.--! "
Map--" %
<--% &
List--& *
<--* +

ProductDto--+ 5
>--5 6
>--6 7
(--7 8
productList--8 C
)--C D
}.. 
;.. 
return// 
response// 
;// 
}00 	
public22 
async22 
Task22 
<22 
Response22 "
<22" #
bool22# '
>22' (
>22( )(
DeleteProductFromBasketAsync22* F
(22F G
string22G M
userId22N T
,22T U
int22V Y
	productId22Z c
)22c d
{33 	
var44 
response44 
=44 
new44 
Response44 '
<44' (
bool44( ,
>44, -
(44- .
)44. /
;44/ 0
var55 
result55 
=55 
await55 
_repository55 *
.55* +
Delete55+ 1
(551 2
userId552 8
,558 9
	productId55: C
)55C D
;55D E
if66 
(66 
!66 
result66 
)66 
{77 
response88 
.88 
Error88 
=88  
new88! $
Error88% *
(88* +
$str88+ 6
)886 7
;887 8
return99 
response99 
;99  
}:: 
response;; 
.;; 
Data;; 
=;; 
result;; "
;;;" #
return<< 
response<< 
;<< 
}== 	
}>> 
}?? ¬;
GC:\Users\ikise\EleksProject\Task2\EleksTask\Services\CategoryService.cs
	namespace		 	
	EleksTask		
 
.		 
Services		 
{

 
public 

class 
CategoryService  
:! "
ICategoryService" 2
{ 
private 
readonly 
ApplicationContext +
_context, 4
;4 5
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 
ICategoryRepository ,
_repository- 8
;8 9
public 
CategoryService 
( 
ApplicationContext 1
context2 9
,: ;
IMapper< C
mapperD J
,J K
ICategoryRepositoryL _

repository` j
)j k
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
Response "
<" #
int# &
>& '
>' (
CreateCategoryAsync) <
(< =
string= C
nameD H
)H I
{ 	
var 
response 
= 
new 
Response '
<' (
int( +
>+ ,
(, -
)- .
;. /
var 
newCategory 
= 
new !
Category" *
(* +
)+ ,
{ 
Name 
= 
name 
} 
; 
var 
res 
= 
await 
_repository '
.' (
Add( +
(+ ,
newCategory, 7
)7 8
;8 9
if   
(   
res   
==   
-   
$num   
)   
{!! 
response"" 
."" 
Error"" 
=""  
new""! $
Error""% *
(""* +
$"""+ -
Category with ""- ;
{""; <
name""< @
}""@ A
 already exist""A O
"""O P
)""P Q
;""Q R
return## 
response## 
;##  
}$$ 
response%% 
.%% 
Data%% 
=%% 
res%% 
;%%  
return&& 
response&& 
;&& 
}'' 	
public)) 
async)) 
Task)) 
<)) 
Response)) "
<))" #
bool))# '
>))' (
>))( )
DeleteCategoryAsync))* =
())= >
[))> ?
	FromRoute))? H
]))H I
int))J M

categoryId))N X
)))X Y
{** 	
var++ 
response++ 
=++ 
new++ 
Response++ '
<++' (
bool++( ,
>++, -
(++- .
)++. /
;++/ 0
var,, 
result,, 
=,, 
await,, 
_repository,, *
.,,* +
Delete,,+ 1
(,,1 2

categoryId,,2 <
),,< =
;,,= >
if-- 
(-- 
!-- 
result-- 
)-- 
{.. 
response// 
.// 
Error// 
=//  
new//! $
Error//% *
(//* +
$str//+ ?
)//? @
;//@ A
}00 
response11 
.11 
Data11 
=11 
result11 "
;11" #
return22 
response22 
;22 
}33 	
public55 
async55 
Task55 
<55 
Response55 "
<55" #
List55# '
<55' (
GetAllCategoryDto55( 9
>559 :
>55: ;
>55; <
GetAllCategories55= M
(55M N
)55N O
{66 	
var77 
response77 
=77 
new77 
Response77 '
<77' (
List77( ,
<77, -
GetAllCategoryDto77- >
>77> ?
>77? @
(77@ A
)77A B
;77B C
var88 

categories88 
=88 
await88 "
_repository88# .
.88. /
GetAll88/ 5
(885 6
)886 7
;887 8
response99 
.99 
Data99 
=99 
_mapper99 #
.99# $
Map99$ '
<99' (
List99( ,
<99, -
GetAllCategoryDto99- >
>99> ?
>99? @
(99@ A

categories99A K
)99K L
;99L M
return:: 
response:: 
;:: 
};; 	
public== 
async== 
Task== 
<== 
Response== "
<==" #
GetCategoryDto==# 1
>==1 2
>==2 3 
GetCategoryByIdAsync==4 H
(==H I
int==I L

categoryId==M W
)==W X
{>> 	
var?? 
response?? 
=?? 
new?? 
Response?? '
<??' (
GetCategoryDto??( 6
>??6 7
(??7 8
)??8 9
;??9 :
var@@ 
category@@ 
=@@ 
await@@ 
_repository@@  +
.@@+ ,
GetById@@, 3
(@@3 4

categoryId@@4 >
)@@> ?
;@@? @
ifAA 
(AA 
categoryAA 
==AA 
nullAA  
)AA  !
{BB 
responseCC 
.CC 
ErrorCC 
=CC  
newCC! $
ErrorCC% *
(CC* +
$strCC+ ?
)CC? @
;CC@ A
returnDD 
responseDD 
;DD  
}EE 
responseFF 
.FF 
DataFF 
=FF 
_mapperFF #
.FF# $
MapFF$ '
<FF' (
GetCategoryDtoFF( 6
>FF6 7
(FF7 8
categoryFF8 @
)FF@ A
;FFA B
returnGG 
responseGG 
;GG 
}HH 	
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
ResponseJJ "
<JJ" #
boolJJ# '
>JJ' (
>JJ( )
RenameCategoryAsyncJJ* =
(JJ= >
intJJ> A

categoryIdJJB L
,JJL M
stringJJM S
newNameJJT [
)JJ[ \
{KK 	
varLL 
responseLL 
=LL 
newLL 
ResponseLL '
<LL' (
boolLL( ,
>LL, -
(LL- .
)LL. /
;LL/ 0
varMM 
resultMM 
=MM 
awaitMM 
_repositoryMM *
.MM* +
RenameMM+ 1
(MM1 2

categoryIdMM2 <
,MM< =
newNameMM= D
)MMD E
;MME F
ifNN 
(NN 
!NN 
resultNN 
)NN 
{OO 
responsePP 
.PP 
ErrorPP 
=PP  
newPP! $
ErrorPP% *
(PP* +
$strPP+ ?
)PP? @
;PP@ A
returnQQ 
responseQQ 
;QQ  
}RR 
responseSS 
.SS 
DataSS 
=SS 
trueSS  
;SS  !
returnTT 
responseTT 
;TT 
}UU 	
}WW 
}XX Ù;
FC:\Users\ikise\EleksProject\Task2\EleksTask\Services\ProductService.cs
	namespace		 	
	EleksTask		
 
.		 
Services		 
{

 
public 

class 
ProductService 
:  !
IProductService" 1
{ 
private 
readonly 
ApplicationContext +
_context, 4
;4 5
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 
IProductRepository +
_repository, 7
;7 8
public 
ProductService 
( 
ApplicationContext 0
context1 8
,8 9
IMapper: A
mapperB H
,H I
IProductRepositoryI [

repository\ f
)f g
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
Response "
<" #
int# &
>& '
>' (
CreateProductAsync) ;
(; <
int< ?

categoryId@ J
,J K
CreateProductDtoL \

productDto] g
)g h
{ 	
var 
response 
= 
new 
Response '
<' (
int( +
>+ ,
(, -
)- .
;. /
var 
product 
= 
_mapper !
.! "
Map" %
<% &
Product& -
>- .
(. /

productDto/ 9
)9 :
;: ;
var 
category 
= 
await  
_repository! ,
., -
Add- 0
(0 1

categoryId1 ;
,; <
product= D
)D E
;E F
if 
( 
category 
== 
- 
$num 
) 
{   
response!! 
.!! 
Error!! 
=!!  
new!!! $
Error!!% *
(!!* +
$str!!+ ?
)!!? @
;!!@ A
return"" 
response"" 
;""  
}## 
response%% 
.%% 
Data%% 
=%% 
product%% #
.%%# $
Id%%$ &
;%%& '
return&& 
response&& 
;&& 
}'' 	
public)) 
async)) 
Task)) 
<)) 
Response)) "
<))" #
bool))# '
>))' (
>))( )
DeleteProductAsync))* <
())< =
int))= @
	productId))A J
)))J K
{** 	
var++ 
response++ 
=++ 
new++ 
Response++ '
<++' (
bool++( ,
>++, -
(++- .
)++. /
;++/ 0
var,, 
result,, 
=,, 
await,, 
_repository,, *
.,,* +
Delete,,+ 1
(,,1 2
	productId,,2 ;
),,; <
;,,< =
if-- 
(-- 
!-- 
result-- 
)-- 
{.. 
response// 
.// 
Error// 
=//  
new//! $
Error//% *
(//* +
$str//+ >
)//> ?
;//? @
return00 
response00 
;00  
}11 
response22 
.22 
Data22 
=22 
result22 "
;22" #
return33 
response33 
;33 
}44 	
public66 
async66 
Task66 
<66 
Response66 "
<66" #
List66# '
<66' (

ProductDto66( 2
>662 3
>663 4
>664 5
GetAllProducts666 D
(66D E
)66E F
{77 	
var88 
response88 
=88 
new88 
Response88 '
<88' (
List88( ,
<88, -

ProductDto88- 7
>887 8
>888 9
(889 :
)88: ;
;88; <
var99 
products99 
=99 
await99  
_repository99! ,
.99, -
GetAll99- 3
(993 4
)994 5
;995 6
response:: 
.:: 
Data:: 
=:: 
_mapper:: #
.::# $
Map::$ '
<::' (
List::( ,
<::, -

ProductDto::- 7
>::7 8
>::8 9
(::9 :
products::: B
)::B C
;::C D
return;; 
response;; 
;;; 
}<< 	
public>> 
async>> 
Task>> 
<>> 
Response>> "
<>>" #
List>># '
<>>' (

ProductDto>>( 2
>>>2 3
>>>3 4
>>>4 5(
GetProductsByCategoryIdAsync>>6 R
(>>R S!
GetProductsRequestDto>>S h
dto>>i l
)>>l m
{?? 	
var@@ 
response@@ 
=@@ 
new@@ 
Response@@ '
<@@' (
List@@( ,
<@@, -

ProductDto@@- 7
>@@7 8
>@@8 9
(@@9 :
)@@: ;
;@@; <
varAA 
productsAA 
=AA 
awaitAA  
_repositoryAA! ,
.AA, -#
GetProductsByCategoryIdAA- D
(AAD E
dtoAAE H
.AAH I

CategoryIdAAI S
,AAS T
dtoAAU X
.AAX Y
SkipAAY ]
,AA] ^
dtoAA_ b
.AAb c
TakeAAc g
,AAg h
dtoAAi l
.AAl m
SearchAAm s
)AAs t
;AAt u
responseBB 
.BB 
DataBB 
=BB 
_mapperBB #
.BB# $
MapBB$ '
<BB' (
ListBB( ,
<BB, -

ProductDtoBB- 7
>BB7 8
>BB8 9
(BB9 :
productsBB: B
)BBB C
;BBC D
returnCC 
responseCC 
;CC 
}DD 	
publicFF 
asyncFF 
TaskFF 
<FF 
ResponseFF "
<FF" #

ProductDtoFF# -
>FF- .
>FF. /

GetProductFF0 :
(FF: ;
intFF; >
	productIdFF? H
)FFH I
{GG 	
varHH 
responseHH 
=HH 
newHH 
ResponseHH '
<HH' (

ProductDtoHH( 2
>HH2 3
(HH3 4
)HH4 5
;HH5 6
varII 
productII 
=II 
awaitII 
_repositoryII  +
.II+ ,
GetByIdII, 3
(II3 4
	productIdII4 =
)II= >
;II> ?
ifJJ 
(JJ 
productJJ 
==JJ 
nullJJ 
)JJ  
responseKK 
.KK 
ErrorKK 
=KK  
newKK! $
ErrorKK% *
(KK* +
$strKK+ >
)KK> ?
;KK? @
elseLL 
responseMM 
.MM 
DataMM 
=MM 
_mapperMM  '
.MM' (
MapMM( +
<MM+ ,

ProductDtoMM, 6
>MM6 7
(MM7 8
productMM8 ?
)MM? @
;MM@ A
returnOO 
responseOO 
;OO 
}PP 	
}QQ 
}RR X
6C:\Users\ikise\EleksProject\Task2\EleksTask\Startup.cs
	namespace 	
	EleksTask
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public   
void   
ConfigureServices   %
(  % &
IServiceCollection  & 8
services  9 A
)  A B
{!! 	
services"" 
."" 
	Configure"" 
<"" 
CookiePolicyOptions"" 2
>""2 3
(""3 4
options""4 ;
=>""< >
{## 
options$$ 
.$$ 
CheckConsentNeeded$$ *
=$$+ ,
context$$- 4
=>$$5 7
true$$8 <
;$$< =
options%% 
.%% !
MinimumSameSitePolicy%% -
=%%. /
SameSiteMode%%0 <
.%%< =
None%%= A
;%%A B
}&& 
)&& 
;&& 
services(( 
.(( 
AddCors(( 
((( 
options(( $
=>((% '
options((( /
.((/ 0
	AddPolicy((0 9
(((9 :
$str((: @
,((@ A
builder((B I
=>((J L
{)) 
builder** 
.** 
AllowAnyOrigin** *
(*** +
)**+ ,
.**, -
AllowAnyMethod++ &
(++& '
)++' (
.++( )
AllowAnyHeader,, &
(,,& '
),,' (
;,,( )
}-- 
).. 
).. 
;.. 
services00 
.00 
AddDbContext00 !
<00! "
ApplicationContext00" 4
>004 5
(005 6
options006 =
=>00> @
{11 
options22 
.22 
UseSqlServer22 $
(22$ %
Configuration22% 2
.222 3
GetConnectionString223 F
(22F G
$str22G Z
)22Z [
)22[ \
;22\ ]
}33 
)33 
;33 
services55 
.55 
AddIdentity55  
<55  !
ApplicationUser55! 0
,550 1
IdentityRole552 >
>55> ?
(55? @
)55@ A
.66 $
AddEntityFrameworkStores66 )
<66) *
ApplicationContext66* <
>66< =
(66= >
)66> ?
.77 $
AddDefaultTokenProviders77 )
(77) *
)77* +
;77+ ,
services99 
.99 
AddSwaggerGen99 "
(99" #
c99# $
=>99% '
{:: 
c;; 
.;; 

SwaggerDoc;; 
(;; 
$str;; #
,;;# $
new;;% (
Info;;) -
{;;. /
Title;;0 5
=;;6 7
$str;;8 G
,;;G H
Version;;I P
=;;Q R
$str;;S Y
};;Z [
);;[ \
;;;\ ]
var>> 
security>> 
=>> 
new>> "

Dictionary>># -
<>>- .
string>>. 4
,>>4 5
IEnumerable>>6 A
<>>A B
string>>B H
>>>H I
>>>I J
{?? 
{@@ 
$str@@ 
,@@ 
new@@ "
string@@# )
[@@) *
]@@* +
{@@, -
}@@. /
}@@/ 0
,@@0 1
}AA 
;AA 
cCC 
.CC !
AddSecurityDefinitionCC '
(CC' (
$strCC( 0
,CC0 1
newCC2 5
ApiKeySchemeCC6 B
{DD 
DescriptionEE 
=EE  !
$str	EE" 
,
EE 
NameFF 
=FF 
$strFF *
,FF* +
InGG 
=GG 
$strGG !
,GG! "
TypeHH 
=HH 
$strHH #
}II 
)II 
;II 
cJJ 
.JJ "
AddSecurityRequirementJJ (
(JJ( )
securityJJ) 1
)JJ1 2
;JJ2 3
}KK 
)KK 
;KK 
servicesNN 
.NN 
AddAuthenticationNN &
(NN& '
optionsNN' .
=>NN/ 1
{OO 
optionsPP 
.PP %
DefaultAuthenticateSchemePP 5
=PP6 7
JwtBearerDefaultsPP8 I
.PPI J 
AuthenticationSchemePPJ ^
;PP^ _
optionsQQ 
.QQ "
DefaultChallengeSchemeQQ 2
=QQ3 4
JwtBearerDefaultsQQ5 F
.QQF G 
AuthenticationSchemeQQG [
;QQ[ \
}SS 
)SS 
.TT 
AddJwtBearerTT 
(TT 
optionsTT %
=>TT& (
{UU 
optionsVV 
.VV 
	SaveTokenVV %
=VV& '
trueVV( ,
;VV, -
optionsWW 
.WW  
RequireHttpsMetadataWW 0
=WW1 2
falseWW3 8
;WW8 9
optionsXX 
.XX %
TokenValidationParametersXX 5
=XX6 7
newXX8 ;%
TokenValidationParametersXX< U
(XXU V
)XXV W
{YY 
ValidateAudienceZZ (
=ZZ) *
falseZZ+ 0
,ZZ0 1
ValidateIssuer[[ &
=[[' (
false[[) .
,[[. /$
ValidateIssuerSigningKey\\ 0
=\\1 2
true\\3 7
,\\7 8
IssuerSigningKey]] (
=]]) *
new^^  # 
SymmetricSecurityKey^^$ 8
(^^8 9
Encoding^^9 A
.^^A B
UTF8^^B F
.^^F G
GetBytes^^G O
(^^O P
Configuration^^P ]
.^^] ^

GetSection^^^ h
(^^h i
$str^^i t
)^^t u
.^^u v
Value^^v {
)^^{ |
)^^| }
,^^} ~
RoleClaimType__ %
=__& '
$str__( /
}aa 
;aa 
}bb 
)bb 
;bb 
servicesdd 
.dd 
AddMvcdd 
(dd 
)dd 
.dd #
SetCompatibilityVersiondd 5
(dd5 6 
CompatibilityVersiondd6 J
.ddJ K
Version_2_1ddK V
)ddV W
;ddW X
servicesff 
.ff 
AddAutoMapperff "
(ff" #
)ff# $
;ff$ %
serviceshh 
.hh 
AddTransienthh !
<hh! "
IEmailServicehh" /
,hh/ 0
EmailServicehh1 =
>hh= >
(hh> ?
)hh? @
;hh@ A
servicesii 
.ii 
AddTransientii !
<ii! "
IAuthServiceii" .
,ii. /
AuthServiceii0 ;
>ii; <
(ii< =
)ii= >
;ii> ?
servicesjj 
.jj 
AddTransientjj !
<jj! "
IProductServicejj" 1
,jj1 2
ProductServicejj3 A
>jjA B
(jjB C
)jjC D
;jjD E
serviceskk 
.kk 
AddTransientkk !
<kk! "
ICategoryServicekk" 2
,kk2 3
CategoryServicekk4 C
>kkC D
(kkD E
)kkE F
;kkF G
servicesll 
.ll 
AddTransientll !
<ll! "
IBasketServicell" 0
,ll0 1
BasketServicell2 ?
>ll? @
(ll@ A
)llA B
;llB C
servicesnn 
.nn 
AddTransientnn !
<nn! "
IUnitOfWorknn" -
,nn- .

UnitOfWorknn/ 9
>nn9 :
(nn: ;
)nn; <
;nn< =
servicesoo 
.oo 
AddTransientoo !
<oo! "
ICategoryRepositoryoo" 5
,oo5 6
CategoryRepositoryoo7 I
>ooI J
(ooJ K
)ooK L
;ooL M
servicespp 
.pp 
AddTransientpp !
<pp! "
IProductRepositorypp" 4
,pp4 5
ProductRepositorypp6 G
>ppG H
(ppH I
)ppI J
;ppJ K
servicesqq 
.qq 
AddTransientqq !
<qq! "
IBasketRepositoryqq" 3
,qq3 4
BasketRepositoryqq5 E
>qqE F
(qqF G
)qqG H
;qqH I
}rr 	
publictt 
voidtt 
	Configurett 
(tt 
IApplicationBuildertt 1
apptt2 5
,tt5 6
IHostingEnvironmenttt7 J
envttK N
)ttN O
{uu 	
ifvv 
(vv 
envvv 
.vv 
IsDevelopmentvv !
(vv! "
)vv" #
)vv# $
{ww 
appxx 
.xx %
UseDeveloperExceptionPagexx -
(xx- .
)xx. /
;xx/ 0
}yy 
elsezz 
{{{ 
app|| 
.|| 
UseExceptionHandler|| '
(||' (
$str||( 0
)||0 1
;||1 2
app}} 
.}} 
UseHsts}} 
(}} 
)}} 
;}} 
}~~ 
app
 
.
 
UseMiddleware
 
<
 !
ExceptionMiddleware
 1
>
1 2
(
2 3
)
3 4
;
4 5
app
 
.
 
UseAuthentication
 !
(
! "
)
" #
;
# $
app
 
.
 

UseSwagger
 
(
 
)
 
;
 
app
 
.
 
UseSwaggerUI
 
(
 
c
 
=>
 !
{
 
c
 
.
 
SwaggerEndpoint
 !
(
! "
$str
" >
,
> ?
$str
@ T
)
T U
;
U V
c
 
.
 
DocumentTitle
 
=
  !
$str
" 7
;
7 8
c
 
.
 
DocExpansion
 
(
 
DocExpansion
 +
.
+ ,
None
, 0
)
0 1
;
1 2
}
 
)
 
;
 
SeedDatabase
 
.
 

Initialize
 #
(
# $
app
$ '
.
' (!
ApplicationServices
( ;
.
; < 
GetRequiredService
< N
<
N O"
IServiceScopeFactory
O c
>
c d
(
d e
)
e f
.
f g
CreateScope
g r
(
r s
)
s t
.
t u
ServiceProvideru 
) 
; 
app
 
.
 !
UseHttpsRedirection
 #
(
# $
)
$ %
;
% &
app
 
.
 
UseStaticFiles
 
(
 
)
  
;
  !
app
 
.
 
UseCookiePolicy
 
(
  
)
  !
;
! "
app
 
.
 
UseMvc
 
(
 
)
 
;
 
}
 	
}
 
} Ú
9C:\Users\ikise\EleksProject\Task2\EleksTask\UnitofWork.cs
	namespace 	
	EleksTask
 
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
public 
ApplicationContext !
Context" )
{* +
get, /
;/ 0
}1 2
public		 

UnitOfWork		 
(		 
ApplicationContext		 ,
context		- 4
)		4 5
{

 	
Context 
= 
context 
; 
} 	
public 
async 
Task 
Commit  
(  !
)! "
{ 	
await 
Context 
. 
SaveChangesAsync )
() *
)* +
;+ ,
} 	
public 
void 
Dispose 
( 
) 
{ 	
Context 
. 
Dispose 
( 
) 
; 
} 	
} 
} 